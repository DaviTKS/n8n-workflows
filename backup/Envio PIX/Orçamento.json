{
  "active": true,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Z-API1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Z-API1": {
      "main": [
        [
          {
            "node": "Z-API2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "servicos_executados": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "defeitos_identificados": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "pecas_utilizadas": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "servicos_executados1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "defeitos_identificados1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "pecas_utilizadas1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [],
        [
          {
            "node": "Z-API3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-04T21:48:42.949Z",
  "id": "Ih7B8ln36C76h3B1",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Envio PIX/Orçamento",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "pix",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2048,
        608
      ],
      "id": "12a2e790-8e0b-4109-b140-6c486b8a6bb7",
      "name": "Webhook",
      "webhookId": "b963b45b-dde2-44ee-9599-414715fe0865"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e707e13f-9bd2-4c87-9fe5-9f3e65644d68",
              "leftValue": "={{ $json.body.message }}",
              "rightValue": "Teste PIX",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1760,
        608
      ],
      "id": "e71483f5-3595-4c90-8de5-e14eaf428434",
      "name": "If"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E29DB01364090EFDC8006E9A5181015/token/771E4BE1F789AB112E4831D6/send-button-pix",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $json.body.phone }}"
            },
            {
              "name": "pixKey",
              "value": "=32473333000124"
            },
            {
              "name": "type",
              "value": "CNPJ"
            },
            {
              "name": "merchantName",
              "value": "Claudinei Bittencourt"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1440,
        736
      ],
      "id": "3faf6cfc-7199-4642-9bf5-2fb534dc8b37",
      "name": "Z-API1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "Gx5XA9roLVkNIKBs",
          "name": "Z-API"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E29DB01364090EFDC8006E9A5181015/token/771E4BE1F789AB112E4831D6/send-text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Valor: R${{ $('Webhook').item.json.body.valor }}"
            },
            {
              "name": "delayMessage",
              "value": "1"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1264,
        736
      ],
      "id": "0c2ba862-1707-4933-ad44-93dd5427124f",
      "name": "Z-API2",
      "credentials": {
        "httpHeaderAuth": {
          "id": "Gx5XA9roLVkNIKBs",
          "name": "Z-API"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "usuarios",
          "mode": "list",
          "cachedResultName": "usuarios"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -704,
        1024
      ],
      "id": "6148836e-8b03-4e0e-850b-1abc599562f7",
      "name": "Insert rows in a table",
      "credentials": {
        "postgres": {
          "id": "ZEobhMYEeazW7SRl",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Webhook').item.json.body.dados_orcamento }}",
        "options": {
          "systemMessage": "=Seu objetivo é pegar os dados_orcamento e organizá-los em uma tabela do supabase.\n\nPara cada defeito, serviço e peça você deverá criar uma linha.\n\nPara defeitos, a tabela a ser utilizada é a defeitos_identificados. Você irá preencher cada linha com a OS atual[{{ $('Webhook').item.json.body.dados_orcamento.os_number }}] e os defeitos.\n\nPara serviços, a tabela a ser utilizada é a servicos_executados. Você irá preencher cada linha com a OS atual[{{ $('Webhook').item.json.body.dados_orcamento.os_number }}, a descrição do serviço e o valor.\n\nPara peças, a tabela a ser utilizada é a pecas_utilizadas. Você irá preencher cada linha com a OS atual[{{ $('Webhook').item.json.body.dados_orcamento.os_number }}, a descrição da peça e o valor.\n\nSegue abaixo o schema de cada tabela:\n\ncreate table public.pecas_utilizadas (\n  id bigint generated by default as identity not null,\n  ordem_servico_id bigint null,\n  descricao text not null,\n  valor numeric(10, 2) not null,\n  constraint pecas_utilizadas_pkey primary key (id),\n  constraint pecas_utilizadas_ordem_servico_id_fkey foreign KEY (ordem_servico_id) references ordens_de_servico (os_number) on delete CASCADE\n) TABLESPACE pg_default;\n\ncreate table public.servicos_executados (\n  id bigint generated by default as identity not null,\n  ordem_servico_id bigint null,\n  descricao text not null,\n  valor numeric(10, 2) not null,\n  constraint servicos_executados_pkey primary key (id),\n  constraint servicos_executados_ordem_servico_id_fkey foreign KEY (ordem_servico_id) references ordens_de_servico (os_number) on delete CASCADE\n) TABLESPACE pg_default;\n\ncreate table public.defeitos_identificados (\n  id bigint generated by default as identity not null,\n  ordem_servico_id bigint null,\n  descricao text not null,\n  constraint defeitos_identificados_pkey primary key (id),\n  constraint defeitos_identificados_ordem_servico_id_fkey foreign KEY (ordem_servico_id) references ordens_de_servico (os_number) on delete CASCADE\n) TABLESPACE pg_default;"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -768,
        48
      ],
      "id": "95168457-54c7-41ac-b7d8-09316949fddd",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "tableId": "servicos_executados",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "ordem_servico_id",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues0_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "descricao",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues1_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "valor",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues2_Field_Value', ``, 'string') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        -464,
        160
      ],
      "id": "372fc9f4-406f-4bb6-a92f-47a7bcf2b54e",
      "name": "servicos_executados",
      "credentials": {
        "supabaseApi": {
          "id": "r7qiHeLbj3sFTwB4",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "defeitos_identificados",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "ordem_servico_id",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues0_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "descricao",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues1_Field_Value', ``, 'string') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        -352,
        160
      ],
      "id": "1f3d300a-f8f3-4308-a55d-0a23262c3e22",
      "name": "defeitos_identificados",
      "credentials": {
        "supabaseApi": {
          "id": "r7qiHeLbj3sFTwB4",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "pecas_utilizadas",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "ordem_servico_id",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues0_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "descricao",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues1_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "valor",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues2_Field_Value', ``, 'string') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        -240,
        160
      ],
      "id": "756571ce-a3cc-43e1-b0f6-6f14084f94e3",
      "name": "pecas_utilizadas",
      "credentials": {
        "supabaseApi": {
          "id": "r7qiHeLbj3sFTwB4",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -768,
        176
      ],
      "id": "a9cf2d85-1d6e-4dd8-b405-92989c216f11",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "sB9sHBeXxAJCJTEo",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1d8d6091-0c92-46ed-a4c3-4d490831bb33",
              "leftValue": "={{ $json.body.dados_orcamento.Salvar }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1264,
        464
      ],
      "id": "26bb059e-ca32-4e63-9fcd-f56760b208fc",
      "name": "If1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E29DB01364090EFDC8006E9A5181015/token/771E4BE1F789AB112E4831D6/send-text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $json.body.phone }}"
            },
            {
              "name": "message",
              "value": "={{ $json.body.message }}"
            },
            {
              "name": "delayMessage",
              "value": "5"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1104,
        544
      ],
      "id": "c64470c4-627f-452f-93c0-14c5d5d4f1e4",
      "name": "Z-API3",
      "credentials": {
        "httpHeaderAuth": {
          "id": "Gx5XA9roLVkNIKBs",
          "name": "Z-API"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Webhook').item.json.body.dados_orcamento }}",
        "options": {
          "systemMessage": "=Seu objetivo é pegar os dados_orcamento e organizá-los em uma tabela do supabase.\n\nPara cada defeito, serviço e peça você deverá criar uma linha.\n\nPara defeitos, a tabela a ser utilizada é a defeitos_identificados. Você irá preencher cada linha com a OS atual[{{ $('Webhook').item.json.body.dados_orcamento.os_number }}] e os defeitos.\n\nPara serviços, a tabela a ser utilizada é a servicos_executados. Você irá preencher cada linha com a OS atual[{{ $('Webhook').item.json.body.dados_orcamento.os_number }}, a descrição do serviço e o valor.\n\nPara peças, a tabela a ser utilizada é a pecas_utilizadas. Você irá preencher cada linha com a OS atual[{{ $('Webhook').item.json.body.dados_orcamento.os_number }}, a descrição da peça e o valor.\n\nSegue abaixo o schema de cada tabela:\n\ncreate table public.pecas_utilizadas (\n  id bigint generated by default as identity not null,\n  ordem_servico_id bigint null,\n  descricao text not null,\n  valor numeric(10, 2) not null,\n  constraint pecas_utilizadas_pkey primary key (id),\n  constraint pecas_utilizadas_ordem_servico_id_fkey foreign KEY (ordem_servico_id) references ordens_de_servico (os_number) on delete CASCADE\n) TABLESPACE pg_default;\n\ncreate table public.servicos_executados (\n  id bigint generated by default as identity not null,\n  ordem_servico_id bigint null,\n  descricao text not null,\n  valor numeric(10, 2) not null,\n  constraint servicos_executados_pkey primary key (id),\n  constraint servicos_executados_ordem_servico_id_fkey foreign KEY (ordem_servico_id) references ordens_de_servico (os_number) on delete CASCADE\n) TABLESPACE pg_default;\n\ncreate table public.defeitos_identificados (\n  id bigint generated by default as identity not null,\n  ordem_servico_id bigint null,\n  descricao text not null,\n  constraint defeitos_identificados_pkey primary key (id),\n  constraint defeitos_identificados_ordem_servico_id_fkey foreign KEY (ordem_servico_id) references ordens_de_servico (os_number) on delete CASCADE\n) TABLESPACE pg_default;"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -736,
        480
      ],
      "id": "99adf949-780f-4ee7-b568-a00a1f47999a",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "tableId": "servicos_executados",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "ordem_servico_id",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues0_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "descricao",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues1_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "valor",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues2_Field_Value', ``, 'string') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        -208,
        592
      ],
      "id": "10c27b3b-3ba3-44b1-939e-e0aedfa29a96",
      "name": "servicos_executados1",
      "credentials": {
        "supabaseApi": {
          "id": "r7qiHeLbj3sFTwB4",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "defeitos_identificados",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "ordem_servico_id",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues0_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "descricao",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues1_Field_Value', ``, 'string') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        -336,
        592
      ],
      "id": "488d5a03-0419-4173-918a-39638850f9f1",
      "name": "defeitos_identificados1",
      "credentials": {
        "supabaseApi": {
          "id": "r7qiHeLbj3sFTwB4",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "pecas_utilizadas",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "ordem_servico_id",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues0_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "descricao",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues1_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "valor",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues2_Field_Value', ``, 'string') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        -464,
        592
      ],
      "id": "0ab49130-a85a-480c-89b5-d8f1cade4839",
      "name": "pecas_utilizadas1",
      "credentials": {
        "supabaseApi": {
          "id": "r7qiHeLbj3sFTwB4",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -736,
        640
      ],
      "id": "359b4700-7c45-421a-8c59-19ee6f4bcc73",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "sB9sHBeXxAJCJTEo",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-08-04T21:48:42.953Z",
      "updatedAt": "2025-08-04T21:48:42.953Z",
      "role": "workflow:owner",
      "workflowId": "Ih7B8ln36C76h3B1",
      "projectId": "O2voI4XYg26wWumH"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-09-01T19:11:33.000Z",
  "versionId": "b1fd98d7-f4f6-4227-b8dd-c938079a9b1d"
}