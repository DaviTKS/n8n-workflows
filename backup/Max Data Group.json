{
  "active": false,
  "connections": {
    "AI Agent": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "If9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "valores": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Organização1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Redis4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Z-API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Estrutura": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Redis3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "Get Buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis3": {
      "main": [
        [
          {
            "node": "Get Buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lead": {
      "main": [
        [
          {
            "node": "Mensagem Lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mensagem Lead": {
      "main": [
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Que Grp?": {
      "main": [
        [
          {
            "node": "Ger. Produtos",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Horário",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filtro Davi": {
      "main": [
        [
          {
            "node": "Lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TXT or AUD": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LLM": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Parse AI": {
      "ai_languageModel": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "MEM 2": {
      "ai_memory": [
        [
          {
            "node": "Avaliador",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Avaliador",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Avaliador": {
      "main": [
        [
          {
            "node": "Redis6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "status",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Msg ID Buffer 1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Redis5": {
      "main": [
        [
          {
            "node": "TXT or AUD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "status": {
      "main": [
        [
          {
            "node": "Redis5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetStat": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Get Buffer 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Funcionamento": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Deleta Buffer": {
      "main": [
        [
          {
            "node": "Organização",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Buffer 1": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Buffer 2": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Encontrar Cliente": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Criar Cliente": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Criar Cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "GetStat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "TXT or AUD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ger. Produtos": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Horário": {
      "main": [
        [
          {
            "node": "Execute Workflow1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Organização": {
      "main": [
        [
          {
            "node": "Join",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Organização1": {
      "main": [
        [
          {
            "node": "Organização2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Organização2": {
      "main": [
        [
          {
            "node": "Avaliador",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1o Nome": {
      "main": [
        [
          {
            "node": "Encontrar Cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data": {
      "main": [
        [
          {
            "node": "Mes1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Sauda2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sauda2": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Join": {
      "main": [
        [
          {
            "node": "Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Get Buffer 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "1o Nome",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Buffer": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Buffer1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "1o Nome",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Deleta Buffer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Buffer 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Buffer 4": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [],
        [
          {
            "node": "Organização3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Organização3": {
      "main": [
        [
          {
            "node": "Get Buffer 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete MSG ID Buffer": {
      "main": [
        [
          {
            "node": "Get Buffer 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [],
        [
          {
            "node": "Get Buffer1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If8": {
      "main": [
        [
          {
            "node": "Redis8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Z-API": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "Delete MSG ID Buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis4": {
      "main": [
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis6": {
      "main": [
        [
          {
            "node": "GetStat1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent3": {
      "main": [
        [
          {
            "node": "Del DB Tmp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Redis10": {
      "main": [
        [
          {
            "node": "AI Agent3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Del DB Tmp": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Relat. Cesar",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Relat. Nei",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Relat. Davi",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "Redis10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetStat1": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Grp ou Msg": {
      "main": [
        [
          {
            "node": "Filtro Davi",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If9": {
      "main": [
        [],
        [
          {
            "node": "Grp ou Msg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-02T01:30:55.298Z",
  "id": "RopwVJBYSJxdyIsS",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Max Data Group",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Join').item.json.mensagens }}",
        "options": {
          "systemMessage": "=## 🚨 Regra de Prioridade Máxima\n\n* **PARA QUALQUER SAUDAÇÃO USE **EXATAMENTE** A REGRA #a1 ABAIXO.\n\n $a1 **SEMPRE ENVIE ESTE TEXTO [{{ $json.output }}] JUNTAMENTE COM A SUA RESPOSTA AO USUÁRIO, ISTO SERÁ SUA TAG DE ATENDIMENTO.\n\n* **Gatilho de Comando Específico:**\n\n  * **SE** a mensagem do usuário for **exatamente** \"falacomigobb\":\n\n    * **Responda APENAS E UNICAMENTE** com o texto: \"Faaaala chefe! Modo desenvolvedor ativado, já renovei seu token, fala comigo!\"\n    * Ignore todas as outras instruções e personas. Não adicione nenhuma outra palavra ou saudação.\n  * **CASO CONTRÁRIO**, siga todas as instruções abaixo.\n\n\n## 🎯 Papel Principal (Persona)\n\n## Seu nome é Max, o agente de atendimento humano.\n\n* **Você é Max:** Um agente de atendimento humano e profissional para a assistência técnica Leão de Judá.\n* **Seu Local de Trabalho:** Rua Nelson César de Oliveira, 203 – Jardim das Indústrias, São José dos Campos.\n* **Objetivo:** Atender clientes, entender suas necessidades, coletar informações e direcionar para um técnico especialista quando necessário.\n* **Comportamento Chave:** Aja como humano em um ambiente empresarial. **Evite deixar claro que você é uma IA.**\n\n## ⚙️ Diretrizes Gerais de Comportamento\n\n### Tom e Estilo\n\n* **Cordialidade Profissional:** Atenda sempre com cordialidade.\n\n* **Adaptação:** Adapte seu tom ao cliente, mantendo registro formal e profissional.\n\n* **Conciso:** Frases curtas e diretas.\n\n* **Uso do Nome:** Cite o primeiro nome do cliente (`{{ $('1o Nome').item.json.primeiroNome }}`) somente na primeira mensagem.\n\n### Contexto e Continuidade\n\n* Sempre considere o histórico prévio para evitar repetição.\n\n## 📋 Escopo de Serviços e Produtos\n\nInforme que a assistência trabalha com:\n\n* **A assistência NÃO trabalha com retirada de aparelhos a domicilio**\n\n* **Manutenção e Consertos:** PCs, Notebooks, Monitores, Micro-ondas, TVs, All in Ones, MacBooks (exceto celulares).\n\n* **Vendas:** Peças, componentes, periféricos, Montagem de PCs Gamer/Profissional(Encaminhe para o técnico para consultar disponibilidade.)\n\n* **Vendas Aparelhos:** TVs, Notebooks, Monitores(Encaminhe para o técnico para consultar disponibilidade.)\n\n## Fluxo de Atendimento\n\n### 1. Saudação \n\n* PARA QUALQUER SAUDAÇÃO USE **EXATAMENTE** A REGRA $a1.\n\n### 2. Entendimento\n\n* Deixe o cliente descrever o problema sem solicitar detalhes técnicos inicialmente.\n\n### 3. Cenários Específicos\n\n* **Retirada de Aparelhos:**\n\n  * Informe que o técnico entrará em contato e desative o atendimento.\n\n* **Dúvida Técnica:**\n\n  * Direcione imediatamente ao especialista, coletando antes modelo e descrição do problema ou peça.\n\n\n* **Pedido de Peças:**\n\n  * (Encaminhe para o técnico para consultar disponibilidade.)\n\n\n* **Consulta de disponibilidade de peças, componentes o periféricos:**\n\n  * Peça para o cliente checar nosso catálogo\n  * Informe que se ele tiver alguma dúvida você pode encaminhar o pedido para o técnico.\n\n* **Pedido de Venda de PCs, Notebooks ou TVs:**\n\n  * Direcione ao especialista, dizendo que o técnico vai consultar a disponibilidade.\n    * NUNCA diga que não temos algo, apenas redirecione para o técnico e diga que irá consultar a disponibilidade\n\n* **Consulta de Preços:**\n\n  * NUNCA diga que não temos algo, apenas redirecione para o técnico e diga que irá consultar a disponibilidade\n\n\n* **Pedido de Desconto:**\n\n  * Informe que consultará o técnico sobre desconto via PIX ou encaminhe ao técnico.\n\n* **Consulta por OS:**\n\n  * Informe que irá verificar com o técnico e retornará o status.\n\n* **Pergunta sobre Endereço:**\n\n  * Informe apenas se solicitado, indicando localização ao lado da lotérica.\n\n* **Pergunta sobre Horário:**\n\n  * Consulte a `tool(Funcionamento)`:\n\n    * Horário normal: Segunda a sexta das 08h-18h, sábado das 08h-13h.\n    * Informe horários alterados com motivos se houver.\n    * Se houver pergunta sobre retirada de aparelho, informe horário e encaminhe ao técnico para verificação.\n\n\n## ⚠️ Regras de Escalada\n\n*Sempre qualifique a lead: \nEx: caso o cliente queira comprar uma tela, pergunte para qual aparelho antes de encaminhar para o técnico.\n\n  *Transfira para o técnico se: dúvida técnica, busca por peças, clima negativo, serviço/produto indisponível, situação não prevista ou perguntas sobre sua identidade (IA).\n  *Caso transferir para o técnico, diga de forma explicita estar transferindo o atendimento E ENCERRE O ATENDIMENTO IMEDIATAMENTE.\n   -Não prolongue ou ofereça ajuda posteriormente.\n\n\n\n## 🛠️ Ferramentas e Variáveis\n\n* **Nome do Cliente:** `{{ $('1o Nome').item.json.primeiroNome }}`\n* **Telefone do Cliente:** `{{ $('Lead').item.json.Telefone }}`\n* **Tool (valores):** Apenas para consultas específicas de preço.\n* **Tool (Status):** Controle interno após encaminhar atendimento ao técnico."
        }
      },
      "id": "202ce8f3-7620-420c-b8aa-db8ec694bd52",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -1216,
        672
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "recebetext1",
        "options": {}
      },
      "id": "0d5d839b-d00b-490c-9837-343c8e17ac88",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -6624,
        672
      ],
      "webhookId": "aa84ef49-0566-487f-b5db-eeb335ca209a"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "produtos",
        "returnAll": true
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        -1104,
        864
      ],
      "id": "cd490374-d3cf-4d16-8837-225ade22323d",
      "name": "valores",
      "credentials": {
        "supabaseApi": {
          "id": "r7qiHeLbj3sFTwB4",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [
        -688,
        752
      ],
      "id": "16e49b60-0d55-48fd-8501-af8b45d371de",
      "name": "Auto-fixing Output Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<mensagem_do_usuario>\n{{ $json.output }}\n</mensagem_do_usuario>",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=#Apenas estruture o XML <mensagem_do_usuario> no formato JSON solicitado no output parser Estrutura e seguindo as instruções de formatação abaixo. \nNão altere nada mais na mensagem \n\n## Formatação \n- Divida as mensagens para que fiquem naturais e humanizadas; \n- Não separe mensagens que tenham menos de 50 caracteres, a não ser que necessário.\n- Não separe mensagens vazias; \n- Apenas separe sentenças completas;\n- NÃO separe mensagens após vírgulas (\",\")\n- Para negrito (bold) use apenas um nunca duas * (exemplo: negrito).\n\n\nExemplo de formato JSON:\n{\n\"mensagens\": [\"Mensagem 0\", \"Mensagem 1\", \"Mensagem 2\"]\n}"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -816,
        592
      ],
      "id": "d1b6e906-f752-4bc3-af3b-95199702c5b8",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.mensagens",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -192,
        528
      ],
      "id": "c3a1533d-1a9f-4281-9082-f98ec3edcd6d",
      "name": "Split Out",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        176,
        528
      ],
      "id": "7a6e68f7-bee1-422c-b11d-25e9f22433f9",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        32,
        640
      ],
      "id": "da9d4c0e-7c6a-479a-b2a7-d4909f0c2a0c",
      "name": "Wait",
      "webhookId": "0a0fbddb-34c1-4975-be3f-51b6552a2bc0"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"mensagens\": {\n\t\t\t\"type\": \"array\",\n\t\t\t\"items\": {\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t}\n\t},\n  \"required\": [\"mensagens\"]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        -608,
        944
      ],
      "id": "969d57d1-0998-4a94-90ee-eeb379517410",
      "name": "Estrutura"
    },
    {
      "parameters": {
        "url": "={{ $('Webhook').item.json.body.msgContent.audioMessage.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1696,
        1504
      ],
      "id": "5dc30707-33bc-49bb-a2c4-1094680e0ba6",
      "name": "HTTP Request",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {
          "language": "pt"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -1488,
        1504
      ],
      "id": "e4ccb2d8-d817-4f21-9f84-9801d7d22686",
      "name": "OpenAI",
      "executeOnce": true,
      "credentials": {
        "openAiApi": {
          "id": "sB9sHBeXxAJCJTEo",
          "name": "OpenAi account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Lead').item.json.Telefone }}_buffer",
        "messageData": "={{ $('Mensagem Lead').item.json.Mensagem }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1488,
        1344
      ],
      "id": "c9a85db3-d1c6-4c9b-a177-e077760df78c",
      "name": "Redis",
      "executeOnce": true,
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Lead').item.json.Telefone }}_buffer",
        "messageData": "={{ $json.text }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1264,
        1504
      ],
      "id": "ce4699b2-b52e-4df3-b8e8-1513a5bee143",
      "name": "Redis3",
      "executeOnce": true,
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "701b4e56-bead-4f6e-8811-c2ba1ba41152",
              "name": "Nome",
              "value": "={{ $json.body.senderName }}",
              "type": "string"
            },
            {
              "id": "f6e77a5a-e114-4144-ba1e-aae22aa2cc44",
              "name": "Telefone",
              "value": "={{ $json.body.phone }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5424,
        608
      ],
      "id": "40a53de8-3ef1-44c4-905c-9df1f19eb83e",
      "name": "Lead"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8157da41-080f-4f0c-98cd-b1dbcacca0b4",
              "name": "Mensagem",
              "value": "={{ $('Webhook').item.json.body.text.message }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5296,
        608
      ],
      "id": "68e8c292-b700-4ea9-b246-b7d38dc87749",
      "name": "Mensagem Lead"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "2Zpk5F0YQDPeC5VM",
          "mode": "list",
          "cachedResultName": "Produtos"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -3968,
        1344
      ],
      "id": "84a454ee-fedb-43f5-b111-e022d47e3a2d",
      "name": "Execute Workflow"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.data.message.senderKeyDistributionMessage.groupId }}",
                    "rightValue": "120363420981315626@g.us",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "7fea6677-bfe5-47f4-8724-8f8b3edb3d98"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e511c57c-9c85-41de-a011-02ae6b9f7345",
                    "leftValue": "={{ $json.body.data.message.senderKeyDistributionMessage.groupId }}",
                    "rightValue": "120363420981315626-group",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8563a4ba-fbc9-4288-a3f9-566f8fb134cb",
                    "leftValue": "",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "none",
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -4528,
        1440
      ],
      "id": "8644a989-5589-47e0-9aee-8dff945f5168",
      "name": "Que Grp?",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "19592785-3f85-493a-bfcd-b124873afc6f",
              "leftValue": "={{ $json.body.phone }}",
              "rightValue": "5512982113000",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "2893267a-2090-433b-b5a4-2ab3999e376e",
              "leftValue": "={{ $json.body.phone }}",
              "rightValue": "551239313000",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "892182a8-3d5f-4aa1-96fa-9dd34e68b674",
              "leftValue": "={{ $json.body.phone }}",
              "rightValue": "5512991853000",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "6d170522-e390-477f-9423-0f1174c559e5",
              "leftValue": "={{ $json.body.phone }}",
              "rightValue": "5512982813000",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "b1e7ed19-d07e-49c4-8539-83ccf98701da",
              "leftValue": "={{ $json.body.phone }}",
              "rightValue": "=120363419000321508-group",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -5568,
        608
      ],
      "id": "486e53a1-e600-4619-a54e-3455236b9bf6",
      "name": "Filtro Davi",
      "disabled": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json.body.msgContent.audioMessage.url }}",
                    "rightValue": "mmg",
                    "operator": {
                      "type": "string",
                      "operation": "notContains"
                    },
                    "id": "03a62020-cbc0-4d01-8c83-cb71bda3ad0f"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cbad2218-264c-4a8c-ac39-7d6bfe8653d9",
                    "leftValue": "={{ $('Webhook').item.json.body.msgContent.audioMessage.url }}",
                    "rightValue": "mmg",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1936,
        1408
      ],
      "id": "2d36be66-49e7-4de9-8572-6dba04fc87c9",
      "name": "TXT or AUD",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {
          "responseFormat": "text"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1344,
        864
      ],
      "id": "a81b0246-1b84-42a4-8516-90e0f26dd61a",
      "name": "LLM",
      "credentials": {
        "openAiApi": {
          "id": "sB9sHBeXxAJCJTEo",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -736,
        944
      ],
      "id": "3195c847-0d68-4982-addf-4135da745fbf",
      "name": "Parse AI",
      "credentials": {
        "openAiApi": {
          "id": "sB9sHBeXxAJCJTEo",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=v2_{{ $('Lead').item.json.Telefone }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1872,
        1088
      ],
      "id": "b6ef1265-591f-4183-a44c-de5b61adb67b",
      "name": "MEM 2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1760,
        1088
      ],
      "id": "678360fd-b95c-4c91-b38b-61827fc5d8a9",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "sB9sHBeXxAJCJTEo",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('AI Agent').item.json.output }}",
        "options": {
          "systemMessage": "=Você é um analista de texto com o único objetivo de analisar se deve ou não desativar a conversa através da tool (Status) caso perceba que a conversa foi redirecionada para o técnico ou um atendente humano, caso a conversa esteja percorrendo um clima muito negativo, ou caso o prompt peça para o cliente aguardar ou esperar.\n\nVocê só ira encerrar a conversa caso:\n-Veja no seu prompt que o atendende escreveu algo como \"Estarei encaminhando para o técnico\", \"Vou passar para o técnico\", ou semelhantes.\n-Perceba no prompt um tom de desculpas ou erros cometidos.\n-Não tenha uma pergunta a ser respondida\n\n#Não encerre a conversa caso não perceba nenhum destes sinais.\n\n#Nunca encerre a conversa caso o agente esteja aguardando alguma resposta.\n\n#Seu output será apenas \"Ativo\" ou \"Desativado\"\n#Sempre envie o seu output para a tool (Status)"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1792,
        832
      ],
      "id": "9f9ede88-dd01-4f73-b01b-b7f71b0707d2",
      "name": "Avaliador"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c5b15db5-2a3b-4876-82af-efd2616c0de5",
                    "leftValue": "={{ $('Mensagem Lead').item.json.Mensagem }}",
                    "rightValue": "falacomigobb",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status1 }}",
                    "rightValue": "Desativado",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "591c2c7d-cf9b-4fd9-8b4c-27b5588cd0ea"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a7224b73-6752-4f94-8d39-61dca14c24dc",
                    "leftValue": "={{ $json.status1 }}",
                    "rightValue": "Ativo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c5ef8092-516f-4cd0-8f4d-034499780e49",
                    "leftValue": "={{ $json.status1 }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "allMatchingOutputs": false
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2816,
        1392
      ],
      "id": "821584fe-9a29-4d63-83be-5730e88ea5f0",
      "name": "Switch"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "atl",
        "key": "={{ $('Lead').item.json.Telefone }}_check",
        "keyType": "string",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2256,
        1200
      ],
      "id": "8165b744-4cc6-4f99-87e1-e28c0ba58a0e",
      "name": "Redis5",
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('Lead').item.json.Telefone }}_check",
        "value": "Ativo",
        "keyType": "string"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2512,
        1200
      ],
      "id": "b4b3c187-1f46-43d3-9215-72ba089e5a89",
      "name": "status",
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "status1",
        "key": "={{ $('Lead').item.json.Telefone }}_check",
        "keyType": "string",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2976,
        1408
      ],
      "id": "76185b04-1099-4989-8b31-f7079b844990",
      "name": "GetStat",
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('Lead').item.json.Telefone }}_check",
        "value": "={{ $json.output }}",
        "keyType": "string",
        "expire": true,
        "ttl": 3600
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2176,
        832
      ],
      "id": "563a9803-006e-445a-9500-18e94552b4ca",
      "name": "Redis6",
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        704,
        1344
      ],
      "id": "2ff58125-ada1-43b2-8bfc-b24ba741c803",
      "name": "Wait2",
      "webhookId": "c0a4110d-d87e-42a7-97f4-4971dbdcb63c",
      "executeOnce": true
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "Funcionamento",
        "returnAll": true
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        -1008,
        864
      ],
      "id": "bbeb9176-3cbb-45ca-8359-85d5d8cf3953",
      "name": "Funcionamento",
      "credentials": {
        "supabaseApi": {
          "id": "r7qiHeLbj3sFTwB4",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "ApgHGhyEipy6Bbf8",
          "mode": "list",
          "cachedResultName": "Horario"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -3968,
        1504
      ],
      "id": "f0a50752-f0e1-4e20-b9d6-e345b78dac2b",
      "name": "Execute Workflow1"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Lead').item.json.Telefone }}_buffer"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2384,
        1328
      ],
      "id": "875d2fa7-efce-48b9-a572-b0c045236d6e",
      "name": "Deleta Buffer",
      "executeOnce": true,
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "mensagens",
        "key": "={{ $('Lead').item.json.Telefone }}_buffer",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        96,
        1344
      ],
      "id": "34afadbb-3fed-420a-aa08-008cb56cb772",
      "name": "Get Buffer 1",
      "executeOnce": true,
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "mensagens",
        "key": "={{ $('Lead').item.json.Telefone }}_buffer",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        944,
        1344
      ],
      "id": "da3b05af-5cf7-4c82-8b7a-a432f83137a9",
      "name": "Get Buffer 2",
      "executeOnce": true,
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {},
      "id": "a62efc43-698c-45e5-97ad-75f7327b59be",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -2368,
        464
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "Usuarios",
        "filters": {
          "conditions": [
            {
              "keyName": "numero",
              "keyValue": "={{ $('Lead').item.json.Telefone }}"
            }
          ]
        }
      },
      "id": "a34f50f4-93dc-4b2c-8a74-acd6d677b341",
      "name": "Encontrar Cliente",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3024,
        464
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "r7qiHeLbj3sFTwB4",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "Usuarios",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "usuarios",
              "fieldValue": "={{ $('Lead').item.json.Nome }}"
            },
            {
              "fieldId": "numero",
              "fieldValue": "={{ $('Lead').item.json.Telefone }}"
            }
          ]
        }
      },
      "id": "1b8bc02d-798a-475a-af12-33e9cb61b660",
      "name": "Criar Cliente",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2624,
        512
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "r7qiHeLbj3sFTwB4",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.numero }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    },
                    "id": "6d29bce9-997b-40cc-9e10-7658e6b6957c"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a9fedeb7-8e71-4610-a47b-269a4daabd6f",
                    "leftValue": "={{ $json.numero }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2864,
        464
      ],
      "id": "6ee93fcb-0705-4f9e-bfe9-0deb0b4480b3",
      "name": "Switch1",
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -2384,
        1584
      ],
      "id": "84697d32-f83c-4100-a54c-a44489361912",
      "name": "Merge1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "639cb065-4e74-47bc-bd4d-ed007ee25eff",
              "leftValue": "={{ $json.body.data.key.participant }}",
              "rightValue": "5512982113000@s.whatsapp.net",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -4176,
        1344
      ],
      "id": "4cba704a-bb6f-4642-beb7-45f8c53f3a55",
      "name": "Ger. Produtos"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5fe25fe7-25b2-4650-aa3d-ef33f24dd0af",
              "leftValue": "={{ $json.body.phone }}{{ $json.body.participantPhone }}",
              "rightValue": "120363420981315626-group5512982113000",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "0532fcca-a591-4500-88f6-5d12061c0395",
              "leftValue": "={{ $json.body.text.message}}",
              "rightValue": "Cleiton,",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -4176,
        1504
      ],
      "id": "26c0b073-764b-4cc8-ade4-248ef5f1ec71",
      "name": "Horário"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2672,
        1072
      ],
      "id": "155293cf-f16f-49b9-952f-9b12905da8dc",
      "name": "Organização"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        32,
        880
      ],
      "id": "633060f8-41ad-4dd5-9d39-92216e5c4a9b",
      "name": "Organização1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        464,
        880
      ],
      "id": "3401a9d4-fc60-41cd-9df5-cbf6edf49417",
      "name": "Organização2"
    },
    {
      "parameters": {
        "jsCode": "const nomeCompleto = $('Lead').first().json.Nome || '';\nconst primeiroNome = nomeCompleto.trim().split(' ')[0] || '';\n\nreturn {\n  json: {\n    primeiroNome,\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2992,
        160
      ],
      "id": "9cbb8faf-a2c7-4130-a992-e3991c859213",
      "name": "1o Nome"
    },
    {
      "parameters": {
        "outputFieldName": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -1488,
        80
      ],
      "id": "6c4d94d5-4cc9-4800-ac34-b0f7f8f7dcbe",
      "name": "Data"
    },
    {
      "parameters": {
        "jsCode": "const meses = [\n  'janeiro', 'fevereiro', 'março', 'abril', 'maio', 'junho',\n  'julho', 'agosto', 'setembro', 'outubro', 'novembro', 'dezembro'\n];\n\nreturn items.map(item => {\n  const data = new Date(item.json.data);\n\n  // Ajuste de fuso se necessário:\n  // data.setHours(data.getHours() - 4);\n\n  const mesExtenso = meses[data.getMonth()];\n  const mesCapitalizado = mesExtenso.charAt(0).toUpperCase() + mesExtenso.slice(1);\n\n  item.json.mes_extenso = mesCapitalizado;\n  return item;\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1328,
        80
      ],
      "id": "11fc0cef-aa97-42ae-b38f-b78e08d6d8fc",
      "name": "Mes1"
    },
    {
      "parameters": {
        "jsCode": "// Obtém a data original em string e converte para objeto Date\nconst inputDateStr = $('Data').first().json.data;\nconst inputDate = new Date(inputDateStr);\n\n// Subtrai 1 hora manualmente (ajuste de -04:00 para -03:00)\ninputDate.setHours(inputDate.getHours() - 7);\n\n// Formata a data no padrão brasileiro\nconst dia = String(inputDate.getDate()).padStart(2, '0');\nconst mes = String(inputDate.getMonth() + 1).padStart(2, '0');\nconst ano = inputDate.getFullYear();\nconst hora = String(inputDate.getHours()).padStart(2, '0');\nconst minuto = String(inputDate.getMinutes()).padStart(2, '0');\n\nconst dataFormatada = `${dia}/${mes}/${ano} ${hora}:${minuto}`;\n\n// Retorna resultado\nreturn [\n  {\n    json: {\n      dataFormatada\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1152,
        80
      ],
      "id": "a1fad85b-59c7-41cf-b1c6-04d0f981039f",
      "name": "Code1"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const dataString = item.json.dataFormatada; // Ex: \"15/07/2025 15:01\"\n\n  // Converte string BR para ISO (yyyy-mm-ddTHH:MM:00)\n  const partes = dataString.split(/[\\s/:]/); // [dia, mês, ano, hora, minuto]\n  const dataISO = `${partes[2]}-${partes[1]}-${partes[0]}T${partes[3]}:${partes[4]}:00`;\n\n  const data = new Date(dataISO);\n  const horaAtual = data.getHours();\n\n  let saudacao;\n\n  if (horaAtual >= 6 && horaAtual < 12) {\n    saudacao = \"Bom dia\";\n  } else if (horaAtual >= 12 && horaAtual < 18) {\n    saudacao = \"Boa tarde\";\n  } else {\n    saudacao = \"Boa noite\";\n  }\n\n  item.json.saudacao = saudacao;\n  return item;\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -912,
        80
      ],
      "id": "e35456dd-644e-4110-b3da-acd2bef0f4ba",
      "name": "Sauda2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "562f4574-659b-4b90-b885-d6acdb3e2e13",
              "name": "mensagens",
              "value": "={{ $('Get Buffer 2').item.json.mensagens.join(\"\\n\") }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1664,
        80
      ],
      "id": "08cd5ff0-9657-4d6f-803f-e92e62e320a8",
      "name": "Join",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Mensagem Lead').item.json.Mensagem }}",
        "options": {
          "systemMessage": "=Você é uma IA com foco em saudar o cliente segundo o horário.\n\nNome={{ $('1o Nome').item.json.primeiroNome }}\n\n##Diretriz primária: SOMENTE SAUDAR O CLIENTE CASO ELE SAUDE OU SEJA A PRIMEIRA INTERAÇÃO SALVA\n\n#DIRETRIZ PRINCIPAL: SAUDAR SEMPRE DE ACORDO COM O HORÁRIO, IGNORAR COMPLETAMENTE O INPUT DO USUÁRIO\n\ncurrent_time = {{ $json.dataFormatada }}\n\nSAUDAÇÃO INICIAL\n\nVerificar horário com a tool current_time e ajustar saudação:\n\n1. Ótimo dia, [nome]! = (antes de 12h)\n\n2. Ótima tarde, [nome]! = (entre 12h e 18h)\n\n3. Ótima noite, [nome]! = (após 18h)\n\nSua reposta conterá APENAS a saudação, de 1 a 3, EX:\n\n-Human: \"Oi\"\n\nHorário: 12:32\n*AI viu que o horário bate com o da saudação 2.*\n\n-AI: \"Ótima tarde, Davi!\""
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -416,
        80
      ],
      "id": "a2069e6d-3a77-4497-9bdc-7be8abfcd938",
      "name": "AI Agent2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -416,
        288
      ],
      "id": "5fd2ac48-7b80-4635-bd04-83777e3eef37",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "sB9sHBeXxAJCJTEo",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "91f02795-5796-4845-94ea-289b469f4ae7",
              "leftValue": "={{ $json.output }}",
              "rightValue": "=Ótima tarde, {{ $('1o Nome').item.json.primeiroNome }}!",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "5b632051-9439-46d8-89a7-80d70e07dd94",
              "leftValue": "={{ $json.output }}",
              "rightValue": "=Ótimo dia, {{ $('1o Nome').item.json.primeiroNome }}!",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "708a3dd9-fb0f-49a8-8b37-f136aef51f22",
              "leftValue": "={{ $json.output }}",
              "rightValue": "=Ótima noite, {{ $('1o Nome').item.json.primeiroNome }}!",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -32,
        80
      ],
      "id": "dbfcd50c-70c1-4d2a-9a40-d90fbe414626",
      "name": "If1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "58864ebc-824c-47cf-a5eb-49fd54193c14",
              "name": "output",
              "value": "null",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        464,
        160
      ],
      "id": "c760f584-218c-4fc9-a465-c5d9d93bd80c",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Lead').item.json.Telefone }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -2224,
        192
      ],
      "id": "cf04cd06-d9a4-4ed2-bb28-5a5666f0d27f",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=5512982113000_check",
        "value": "=Ativo",
        "keyType": "string",
        "expire": true,
        "ttl": 3600
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        112,
        -80
      ],
      "id": "a60a107f-4713-434d-a532-446f144e231f",
      "name": "Redis7",
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a0ba33dd-8d0b-4673-bf52-ba7954e29370",
              "leftValue": "={{ $json.mensagens }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "f6b79ed2-cb77-402a-b3a4-f8d5b179f4ba",
              "leftValue": "={{ $json.mensagens }}",
              "rightValue": "={{ $('Webhook').item.json.body.messageId }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -832,
        1408
      ],
      "id": "12b8327d-270a-4086-a541-8538b8dc096b",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('Lead').item.json.Telefone }}_msg",
        "value": "={{ $('Webhook').item.json.body.messageId }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -3216,
        272
      ],
      "id": "43bfc50e-15c8-4e6a-b7af-d2ae7fb52a8d",
      "name": "Redis1",
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "mensagens",
        "key": "={{ $('Lead').item.json.Telefone }}_msg",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1056,
        1408
      ],
      "id": "3f34b9ce-6e2d-4c49-8169-256bc9f69b0c",
      "name": "Get Buffer",
      "executeOnce": true,
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "mensagens",
        "key": "={{ $('Lead').item.json.Telefone }}_msg",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -3792,
        352
      ],
      "id": "0af6e827-e69f-4271-88eb-32cc6bf8208a",
      "name": "Get Buffer1",
      "executeOnce": true,
      "retryOnFail": false,
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f45894f6-038e-4e41-95fa-4d302d638794",
              "leftValue": "={{ $json.mensagens }}",
              "rightValue": "null",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3504,
        240
      ],
      "id": "57173352-73b3-480b-a358-65acc1251486",
      "name": "If3"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Lead').item.json.Telefone }}_DB",
        "sessionTTL": 86400
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.5,
      "position": [
        -1216,
        864
      ],
      "id": "683b54aa-2d6b-4359-992a-dcc33e4aaecc",
      "name": "Redis Chat Memory",
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "19626244-f0e4-4f6c-82bd-53810b6ab6d1",
              "leftValue": "={{ $json.mensagens.last() }}",
              "rightValue": "={{ $('Get Buffer 1').item.json.mensagens.last() }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1152,
        1344
      ],
      "id": "73724051-dee0-4871-9590-81d94e22d921",
      "name": "If4"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "mensagens",
        "key": "={{ $('Lead').item.json.Telefone }}_buffer",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1040,
        432
      ],
      "id": "75aa11b4-14e6-4094-aee4-262a0df46e82",
      "name": "Get Buffer 4",
      "executeOnce": true,
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2dcea664-7257-45bf-be54-1168bdc13ff3",
              "leftValue": "={{ $json.mensagens }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1200,
        432
      ],
      "id": "c344c0ee-ad99-4b63-af26-cde39b36d165",
      "name": "If5"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1136,
        1040
      ],
      "id": "74993e2b-e87e-4033-ab55-3aec4fe08972",
      "name": "Organização3"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Lead').item.json.Telefone }}_msg"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2384,
        1392
      ],
      "id": "263dedc0-8da6-42f1-87d5-cc993275b371",
      "name": "Delete Msg ID Buffer 1",
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Lead').item.json.Telefone }}_msg"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        784,
        432
      ],
      "id": "79f1ab1f-460b-4c3a-9ed8-143f7fcc321d",
      "name": "Delete MSG ID Buffer",
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ce44d552-db37-4741-b37a-9f8fc25c8990",
              "leftValue": "={{ $('Webhook').item.json.body.fromMe }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5072,
        608
      ],
      "id": "6a2e7de6-7107-4197-b009-f04e9d5313e3",
      "name": "If6"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('Lead').item.json.Telefone }}_check",
        "value": "=Desativado",
        "keyType": "string",
        "expire": true,
        "ttl": 3600
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -4832,
        352
      ],
      "id": "4656788f-6ef6-4cb5-a029-fa3bfc1a02e8",
      "name": "Redis8",
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8c7f3257-668c-42f8-be0f-af2809c8905b",
              "leftValue": "={{ $('Mensagem Lead').item.json.Mensagem }}",
              "rightValue": "Max",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5088,
        448
      ],
      "id": "d8c5e401-c629-4ee4-9434-56aaa72c488f",
      "name": "If8"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E29DB01364090EFDC8006E9A5181015/token/771E4BE1F789AB112E4831D6/send-text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"phone\": \"120363419000321508-group\",\n    \"message\": \"*#Max - Atendimento*\\nCliente: *{{ $('Lead').item.json.Nome }}*\\nTelefone: *{{ $('Lead').item.json.Telefone }}*\\n\\n{{ $('Split Out').item.json['output.mensagens'] }}\",\n    \"delayMessage\":3\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        880,
        640
      ],
      "id": "298a90d6-9d8e-4795-84b0-fb0b836c8043",
      "name": "Z-API",
      "credentials": {
        "httpHeaderAuth": {
          "id": "Gx5XA9roLVkNIKBs",
          "name": "Z-API"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Lead').item.json.Telefone }}_DB.tmp",
        "messageData": "={{[$json.dbtemp[0], $json.dbtemp[1]]}}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        560,
        432
      ],
      "id": "c3be3a17-a08f-4cd2-af4a-f6ee2bdccb27",
      "name": "Redis2",
      "retryOnFail": false,
      "maxTries": 2,
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "dbtemp",
        "key": "={{ $('Lead').item.json.Telefone }}_DB",
        "keyType": "list",
        "options": {
          "dotNotation": true
        }
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        400,
        432
      ],
      "id": "b21519a8-651d-4e07-b3f1-798c8c376a34",
      "name": "Redis4",
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('Lead').item.json.Telefone }}_DB.tmp",
        "value": "={{ [ $json.dbtemp[0], $json.dbtemp[1] ] }}",
        "keyType": "sets",
        "expire": true,
        "ttl": 18000
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        688,
        176
      ],
      "id": "fca3afa8-00cf-4420-99eb-c8de42cebc9f",
      "name": "Redis9",
      "retryOnFail": false,
      "maxTries": 2,
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ [$json.Input[0], $json.Input[1]] }}",
        "options": {
          "systemMessage": "=Você é um agente com foco em categorização e resumo de conversas de uma assistência técnica com o cliente.\n\n  Seu objetivo é resumir a necessidade do cliente em menos de 100 caracteres e também categorizar essa conversa em 5 categorias: Televisão e afins; Computador e afins; Notebook e afins; Monitor e afins; Microondas e afins.\n\nApós a categorização da mensagem você deve definir para qual técnico o contato será passado:\n\n  Televisão e afins = Claudinei \n  Computador e afins = César\n  Notebook e afins = César\n  Monitor e afins = César\n  Microondas e afins = Claudinei\n\nApós todas as etapas concluídas preencha seu output da seguinte forma:\n\n\n \"⚠️[Nome do técnico], atendimento automático encerrado.\n\n👤 Cliente: *{{ $('Webhook').item.json.body.senderName }}* \n📱 Número: *{{ $('Webhook').item.json.body.phone }}* \n\n📬 Relatório: _[Resumo da necessidade do cliente]_\""
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        3184,
        800
      ],
      "id": "7c35960d-c720-45c9-b30d-34c8874f12ba",
      "name": "AI Agent3"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3184,
        1008
      ],
      "id": "8cfbd3b3-2283-4d85-8a19-7fffe8b9097c",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "sB9sHBeXxAJCJTEo",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "Input",
        "key": "={{ $('Lead').item.json.Telefone }}_DB.tmp",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2976,
        800
      ],
      "id": "2f7212dd-184a-4ec9-b591-bd45c2f0626b",
      "name": "Redis10",
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Lead').item.json.Telefone }}_DB.tmp"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3536,
        800
      ],
      "id": "667f9f2d-db13-4fb0-bfe3-bb40ce55e26f",
      "name": "Del DB Tmp",
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "César",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "d8315e5f-bb49-4541-a4e3-fe8bd44ae002"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c0520a07-59c0-44c4-b9c8-cca04d14afad",
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "Claudinei",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f3e239d8-bf72-4502-8f0d-8a5bfb0ad890",
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "Davi",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3792,
        800
      ],
      "id": "36a76fd0-8879-4b7f-9801-2cc7563f0314",
      "name": "Switch2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E29DB01364090EFDC8006E9A5181015/token/771E4BE1F789AB112E4831D6/send-text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "5512982113000"
            },
            {
              "name": "message",
              "value": "={{$json.output}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4112,
        640
      ],
      "id": "e5416b85-7edf-468d-b8c2-c55527301d5a",
      "name": "Relat. Cesar",
      "credentials": {
        "httpHeaderAuth": {
          "id": "Gx5XA9roLVkNIKBs",
          "name": "Z-API"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E29DB01364090EFDC8006E9A5181015/token/771E4BE1F789AB112E4831D6/send-text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "5512982113000"
            },
            {
              "name": "message",
              "value": "={{$json.output}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4112,
        800
      ],
      "id": "97108aea-1f18-4aa3-8273-cfab25034189",
      "name": "Relat. Nei",
      "credentials": {
        "httpHeaderAuth": {
          "id": "Gx5XA9roLVkNIKBs",
          "name": "Z-API"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E29DB01364090EFDC8006E9A5181015/token/771E4BE1F789AB112E4831D6/send-text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "5512982113000"
            },
            {
              "name": "message",
              "value": "={{$json.output}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4112,
        960
      ],
      "id": "2da4ec97-dbe8-4553-bb22-c360032d0376",
      "name": "Relat. Davi",
      "credentials": {
        "httpHeaderAuth": {
          "id": "Gx5XA9roLVkNIKBs",
          "name": "Z-API"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "af294180-9d51-4891-ac06-abe8c8dc5893",
              "leftValue": "={{ $json.status1 }}",
              "rightValue": "Desativado",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2640,
        832
      ],
      "id": "7f536a76-04f0-46c2-96ba-b768471a84a0",
      "name": "If7"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "status1",
        "key": "={{ $('Lead').item.json.Telefone }}_check",
        "keyType": "string",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2464,
        832
      ],
      "id": "76c16c2f-be5a-42c4-9322-b31d7648d0b9",
      "name": "GetStat1",
      "credentials": {
        "redis": {
          "id": "Y9iYyrM7JSw5IMqj",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ca0ede51-ecde-4e1f-879a-946a2fda65eb",
                    "leftValue": "={{ $json.body.isGroup }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "false",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.isGroup }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    },
                    "id": "c0eba5d2-a7df-4916-bec0-ed0ced47910a"
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -5888,
        688
      ],
      "id": "83740f0e-ffe8-4a10-b6de-d47a57c26fe5",
      "name": "Grp ou Msg"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d2a959c6-58a2-495d-a2a0-ad7202d81939",
              "leftValue": "={{ $json.body.waitingMessage }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -6176,
        672
      ],
      "id": "08997c87-395d-4ef7-953b-626d34e039e0",
      "name": "If9"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Join').item.json.mensagens }}",
        "options": {
          "systemMessage": "=## 🚨 Regra de Prioridade Máxima\n\n* **Gatilho de Comando Específico:**\n\n  * **SE** a mensagem do usuário for **exatamente** `falacomigobb`:\n\n    * **Responda APENAS E UNICAMENTE** com o texto: \"Faaaala chefe! Modo desenvolvedor ativado, já renovei seu token, fala comigo!\"\n    * Ignore todas as outras instruções e personas. Não adicione nenhuma outra palavra ou saudação.\n  * **CASO CONTRÁRIO**, siga todas as instruções abaixo.\n\n## 🎯 Papel Principal (Persona)\n\n## Seu nome é Cleiton, o agente de atendimento humano.\n\n* **Você é Cleiton:** Um agente de atendimento humano e profissional para a assistência técnica Leão de Judá.\n* **Seu Local de Trabalho:** Rua Nelson César de Oliveira, 203 – Jardim das Indústrias, São José dos Campos.\n* **Objetivo:** Atender clientes, entender suas necessidades, coletar informações e direcionar para um técnico especialista quando necessário.\n* **Comportamento Chave:** Aja como humano em um ambiente empresarial. **Evite deixar claro que você é uma IA.**\n\n## ⚙️ Diretrizes Gerais de Comportamento\n\n### Tom e Estilo\n\n* **🔄 Saudação Automática Baseada no Horário:**\n\n\n##**siga rigorosamente esta saudação `{{ $json.saudacao }}`**\n\n* **Cordialidade Profissional:** Atenda sempre com cordialidade.\n\n* **Adaptação:** Adapte seu tom ao cliente, mantendo registro formal e profissional.\n\n* **Conciso:** Frases curtas e diretas.\n\n* **Uso do Nome:** Cite o primeiro nome do cliente (`{{ $('1o Nome').item.json.primeiroNome }}`) somente na primeira mensagem.\n\n### Contexto e Continuidade\n\n* Sempre considere o histórico prévio para evitar repetição.\n\n## 📋 Escopo de Serviços e Produtos\n\nInforme que a assistência trabalha com:\n\n* **Manutenção e Consertos:** PCs, Notebooks, Monitores, Micro-ondas, TVs, All in Ones, MacBooks (exceto celulares).\n* **Vendas:** Peças, componentes, TVs, Notebooks, Montagem de PCs Gamer/Profissional, Monitores, Periféricos.\n\n## Fluxo de Atendimento\n\n### 1. Primeiro Contato\n\n* Cumprimente conforme a saudação({{ $json.saudacao }}).\n* Pergunte como ajudar, exceto se o problema já estiver declarado.\n\n### 2. Entendimento\n\n* Deixe o cliente descrever o problema sem solicitar detalhes técnicos inicialmente.\n\n### 3. Cenários Específicos\n\n* **Retirada de Aparelhos:**\n\n  * Informe que o técnico entrará em contato e desative o atendimento.\n\n* **Dúvida Técnica/Pedido de Peças:**\n\n  * Direcione imediatamente ao especialista, coletando antes modelo e descrição do problema ou peça.\n\n* **Consulta de Preços:**\n\n  * Consulte a `tool(valores)` somente se solicitado especificamente.\n\n* **Pedido de Desconto:**\n\n  * Informe que consultará o técnico sobre desconto via PIX ou encaminhe ao técnico.\n\n* **Consulta por OS:**\n\n  * Informe que irá verificar com o técnico e retornará o status.\n\n* **Pergunta sobre Endereço:**\n\n  * Informe apenas se solicitado, indicando localização ao lado da lotérica.\n\n* **Pergunta sobre Horário:**\n\n  * Consulte a `tool(Funcionamento)`:\n\n    * Horário normal: Segunda a sexta das 08h-18h, sábado das 08h-13h.\n    * Informe horários alterados com motivos se houver.\n    * Se houver pergunta sobre retirada de aparelho, informe horário e encaminhe ao técnico para verificação.\n\n## ⚠️ Regras de Escalada\n\n* Transfira para o técnico se: dúvida técnica, busca por peças, clima negativo, serviço/produto indisponível, situação não prevista ou perguntas sobre sua identidade (IA).\n\n## 🛠️ Ferramentas e Variáveis\n\n* **Nome do Cliente:** `{{ $('1o Nome').item.json.primeiroNome }}`\n* **Telefone do Cliente:** `{{ $('Lead').item.json.Telefone }}`\n* **Tool (valores):** Apenas para consultas específicas de preço.\n* **Tool (Status):** Controle interno após encaminhar atendimento ao técnico.\n"
        }
      },
      "id": "c5b2dd76-6fdb-4bca-a2da-882d80a26f0d",
      "name": "AI Agent1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -3632,
        -16
      ],
      "alwaysOutputData": true
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "hayrMe7QpDgBDUbE"
  },
  "shared": [
    {
      "createdAt": "2025-08-02T01:30:55.305Z",
      "updatedAt": "2025-08-02T01:30:55.305Z",
      "role": "workflow:owner",
      "workflowId": "RopwVJBYSJxdyIsS",
      "projectId": "O2voI4XYg26wWumH"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-09-09T11:47:22.000Z",
  "versionId": "aa38a3b4-a35b-4eb3-bcf3-6c69020acf51"
}