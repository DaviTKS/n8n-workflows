{
  "active": false,
  "connections": {
    "AI Agent": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "If9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "valores": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          },
          {
            "node": "Avaliador",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Redis4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Z-API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Estrutura": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Redis3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "Get MsgID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis3": {
      "main": [
        [
          {
            "node": "Get MsgID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lead": {
      "main": [
        [
          {
            "node": "Mensagem Lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mensagem Lead": {
      "main": [
        [
          {
            "node": "IF FromMe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Grp ou Msg": {
      "main": [
        [
          {
            "node": "Filtro Davi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Que Grp?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Que Grp?": {
      "main": [
        [
          {
            "node": "Ger. Produtos",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Horário",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filtro Davi": {
      "main": [
        [
          {
            "node": "Lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TXT or AUD": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LLM": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Parse AI": {
      "ai_languageModel": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "MEM 2": {
      "ai_memory": [
        [
          {
            "node": "Avaliador",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Avaliador",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Avaliador": {
      "main": [
        [
          {
            "node": "Redis6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "status",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Msg ID Buffer 1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Redis5": {
      "main": [
        [
          {
            "node": "TXT or AUD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "status": {
      "main": [
        [
          {
            "node": "Redis5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetStat": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Get Buffer 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Funcionamento": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Deleta Buffer": {
      "main": [
        [
          {
            "node": "Join",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Buffer 1": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Buffer 2": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Encontrar Cliente": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Criar Cliente": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Criar Cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "GetStat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "TXT or AUD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ger. Produtos": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Horário": {
      "main": [
        [
          {
            "node": "Execute Workflow1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1o Nome": {
      "main": [
        [
          {
            "node": "Encontrar Cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data": {
      "main": [
        [
          {
            "node": "Mes1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Sauda2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sauda2": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Join": {
      "main": [
        [
          {
            "node": "Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Redis OK1": {
      "main": [
        [
          {
            "node": "Lock process1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Get Buffer 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Não encaminhada1": {
      "main": [
        [
          {
            "node": "Check Lock Too1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Encaminhada1": {
      "main": [
        [
          {
            "node": "Check Lock1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop1": {
      "main": [
        [],
        [
          {
            "node": "Get Buffer ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lock process1": {
      "main": [
        [
          {
            "node": "Deleta Buffer1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Encaminhada1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Não encaminhada1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Lock1": {
      "main": [
        [
          {
            "node": "If Redis OK1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Buffer ": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Buffer 3": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Lock Too1": {
      "main": [
        [
          {
            "node": "If Redis OK1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "1o Nome",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Buffer1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "1o Nome",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Deleta Buffer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Buffer 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Buffer 4": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [],
        [
          {
            "node": "Organização3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Organização3": {
      "main": [
        [
          {
            "node": "Get Buffer 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete MSG ID Buffer": {
      "main": [
        [
          {
            "node": "Get Buffer 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Z-API": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "Delete MSG ID Buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis4": {
      "main": [
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis6": {
      "main": [
        [
          {
            "node": "GetStat1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent3": {
      "main": [
        [
          {
            "node": "Del DB Tmp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Redis10": {
      "main": [
        [
          {
            "node": "AI Agent3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Del DB Tmp": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Relat. Cesar",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Relat. Nei",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Relat. Davi",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "Redis10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetStat1": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF FromMe": {
      "main": [
        [
          {
            "node": "IF Not From Max",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Buffer1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Not From Max": {
      "main": [
        [
          {
            "node": "Block Agente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get MsgID": {
      "main": [
        [
          {
            "node": "If MsgID OK",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If MsgID OK": {
      "main": [
        [
          {
            "node": "Get Buffer 1",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "If9": {
      "main": [
        [],
        [
          {
            "node": "Grp ou Msg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-08T03:32:25.485Z",
  "id": "gl5td3Dwy5ohXACO",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Max",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Join').item.json.mensagens }}",
        "options": {
          "systemMessage": "=## 🚨 Regra de Prioridade Máxima\n\n* **PARA QUALQUER SAUDAÇÃO USE **EXATAMENTE** A REGRA #a1 ABAIXO.\n\n $a1 **SEMPRE ENVIE ESTE TEXTO [{{ $json.output }}] JUNTAMENTE COM A SUA RESPOSTA AO USUÁRIO, ISTO SERÁ SUA TAG DE ATENDIMENTO.\n\n* **Gatilho de Comando Específico:**\n\n  * **SE** a mensagem do usuário for **exatamente** \"falacomigobb\":\n\n    * **Responda APENAS E UNICAMENTE** com o texto: \"Faaaala chefe! Modo desenvolvedor ativado, já renovei seu token, fala comigo!\"\n    * Ignore todas as outras instruções e personas. Não adicione nenhuma outra palavra ou saudação.\n  * **CASO CONTRÁRIO**, siga todas as instruções abaixo.\n\n\n## 🎯 Papel Principal (Persona)\n\n## Seu nome é Max, o agente de atendimento humano.\n\n* **Você é Max:** Um agente de atendimento humano e profissional para a assistência técnica Leão de Judá.\n* **Seu Local de Trabalho:** Rua Nelson César de Oliveira, 203 – Jardim das Indústrias, São José dos Campos.\n* **Objetivo:** Atender clientes, entender suas necessidades, coletar informações e direcionar para um técnico especialista quando necessário.\n* **Comportamento Chave:** Aja como humano em um ambiente empresarial. **Evite deixar claro que você é uma IA.**\n\n## ⚙️ Diretrizes Gerais de Comportamento\n\n### Tom e Estilo\n\n* **Cordialidade Profissional:** Atenda sempre com cordialidade.\n\n* **Adaptação:** Adapte seu tom ao cliente, mantendo registro formal e profissional.\n\n* **Conciso:** Frases curtas e diretas.\n\n* **Uso do Nome:** Cite o primeiro nome do cliente (`{{ $('1o Nome').item.json.primeiroNome }}`) somente na primeira mensagem.\n\n### Contexto e Continuidade\n\n* Sempre considere o histórico prévio para evitar repetição.\n\n## 📋 Escopo de Serviços e Produtos\n\nInforme que a assistência trabalha com:\n\n* **A assistência NÃO trabalha com retirada de aparelhos a domicilio**\n\n* **Manutenção e Consertos:** PCs, Notebooks, Monitores, Micro-ondas, TVs, All in Ones, MacBooks (exceto celulares).\n\n* **Vendas:** Peças, componentes, periféricos, Montagem de PCs Gamer/Profissional(Encaminhe para o técnico para consultar disponibilidade.)\n\n* **Vendas Aparelhos:** TVs, Notebooks, Monitores(Encaminhe para o técnico para consultar disponibilidade.)\n\n## Fluxo de Atendimento\n\n### 1. Saudação \n\n* PARA QUALQUER SAUDAÇÃO USE **EXATAMENTE** A REGRA $a1.\n\n### 2. Entendimento\n\n* Deixe o cliente descrever o problema sem solicitar detalhes técnicos inicialmente.\n\n### 3. Cenários Específicos\n\n* **Retirada de Aparelhos:**\n\n  * Informe que o técnico entrará em contato e desative o atendimento.\n\n* **Dúvida Técnica:**\n\n  * Direcione imediatamente ao especialista, coletando antes modelo e descrição do problema ou peça.\n\n\n* **Pedido de Peças:**\n\n  * (Encaminhe para o técnico para consultar disponibilidade.)\n\n\n* **Consulta de disponibilidade de peças, componentes o periféricos:**\n\n  * Peça para o cliente checar nosso catálogo\n  * Informe que se ele tiver alguma dúvida você pode encaminhar o pedido para o técnico.\n\n* **Pedido de Venda de PCs, Notebooks ou TVs:**\n\n  * Direcione ao especialista, dizendo que o técnico vai consultar a disponibilidade.\n    * NUNCA diga que não temos algo, apenas redirecione para o técnico e diga que irá consultar a disponibilidade\n\n* **Consulta de Preços:**\n\n  * NUNCA diga que não temos algo, apenas redirecione para o técnico e diga que irá consultar a disponibilidade\n\n\n* **Pedido de Desconto:**\n\n  * Informe que consultará o técnico sobre desconto via PIX ou encaminhe ao técnico.\n\n* **Consulta por OS:**\n\n  * Informe que irá verificar com o técnico e retornará o status.\n\n* **Pergunta sobre Endereço:**\n\n  * Informe apenas se solicitado, indicando localização ao lado da lotérica.\n\n* **Pergunta sobre Horário:**\n\n  * Consulte a `tool(Funcionamento)`:\n\n    * Horário normal: Segunda a sexta das 08h-18h, sábado das 08h-13h.\n    * Informe horários alterados com motivos se houver.\n    * Se houver pergunta sobre retirada de aparelho, informe horário e encaminhe ao técnico para verificação.\n\n\n## ⚠️ Regras de Escalada\n\n*Sempre qualifique a lead: \nEx: caso o cliente queira comprar uma tela, pergunte para qual aparelho antes de encaminhar para o técnico.\n\n  *Transfira para o técnico se: dúvida técnica, busca por peças, clima negativo, serviço/produto indisponível, situação não prevista ou perguntas sobre sua identidade (IA).\n  *Caso transferir para o técnico, diga de forma explicita estar transferindo o atendimento E ENCERRE O ATENDIMENTO IMEDIATAMENTE.\n   -Não prolongue ou ofereça ajuda posteriormente.\n\n\n\n## 🛠️ Ferramentas e Variáveis\n\n* **Nome do Cliente:** `{{ $('1o Nome').item.json.primeiroNome }}`\n* **Telefone do Cliente:** `{{ $('Lead').item.json.Telefone }}`\n* **Tool (valores):** Apenas para consultas específicas de preço.\n* **Tool (Status):** Controle interno após encaminhar atendimento ao técnico."
        }
      },
      "id": "d01e9ef2-23a7-41da-8302-d38c45683b06",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        9720,
        -900
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "recebetext1",
        "options": {}
      },
      "id": "2f4225a3-80d1-4e6b-b920-906e43835c49",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        1060,
        -540
      ],
      "webhookId": "bc978142-377f-4daf-b31e-3390dc1be1df"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "produtos",
        "returnAll": true
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        9880,
        -700
      ],
      "id": "d9558fa3-3e06-46f7-94d3-f86987ed97c1",
      "name": "valores",
      "credentials": {
        "supabaseApi": {
          "id": "rOYD11WtKRJQ9Bli",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [
        10260,
        -740
      ],
      "id": "f32c8ec1-507d-4cb7-b443-614ce20b118a",
      "name": "Auto-fixing Output Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<mensagem_do_usuario>\n{{ $json.output }}\n</mensagem_do_usuario>",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=#Apenas estruture o XML <mensagem_do_usuario> no formato JSON solicitado no output parser Estrutura e seguindo as instruções de formatação abaixo. \nNão altere nada mais na mensagem \n\n## Formatação \n- Divida as mensagens para que fiquem naturais e humanizadas; \n- Não separe mensagens que tenham menos de 50 caracteres, a não ser que necessário.\n- Não separe mensagens vazias; \n- Apenas separe sentenças completas;\n- NÃO separe mensagens após vírgulas (\",\")\n- Para negrito (bold) use apenas um nunca duas * (exemplo: negrito).\n\n\nExemplo de formato JSON:\n{\n\"mensagens\": [\"Mensagem 0\", \"Mensagem 1\", \"Mensagem 2\"]\n}"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        10140,
        -900
      ],
      "id": "4c09b7ac-b92d-4cba-bf2a-f5712e4d7aa1",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.mensagens",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        10520,
        -820
      ],
      "id": "a9a64138-f015-4f98-8297-8cd91db44405",
      "name": "Split Out",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        7940,
        -400
      ],
      "id": "c14a5b5e-c75f-4039-801a-69334fc3dd16",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        7800,
        -260
      ],
      "id": "c9585a68-4c8f-4150-8056-c7c75104bb14",
      "name": "Wait",
      "webhookId": "39955354-d054-4960-be7b-d15d7fa5da79"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"mensagens\": {\n\t\t\t\"type\": \"array\",\n\t\t\t\"items\": {\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t}\n\t},\n  \"required\": [\"mensagens\"]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        10340,
        -540
      ],
      "id": "f263e6a5-388c-4649-8d04-49cb3cf38365",
      "name": "Estrutura"
    },
    {
      "parameters": {
        "url": "={{ $('Webhook').item.json.body.msgContent.audioMessage.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5740,
        -440
      ],
      "id": "d6fccf07-162c-4a05-a119-c602367058a7",
      "name": "HTTP Request",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {
          "language": "pt"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        5940,
        -440
      ],
      "id": "326aa76a-35a3-4005-8d06-17401b17f7bc",
      "name": "OpenAI",
      "executeOnce": true,
      "credentials": {
        "openAiApi": {
          "id": "bcjn0rZ3TjEvRciY",
          "name": "OpenAi account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Lead').item.json.Telefone }}_buffer",
        "messageData": "={{ $('Mensagem Lead').item.json.Mensagem }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        5940,
        -600
      ],
      "id": "0d69a6c5-5619-4144-8238-cd1e30f22e77",
      "name": "Redis",
      "executeOnce": true,
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Lead').item.json.Telefone }}_buffer",
        "messageData": "={{ $json.text }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        6160,
        -440
      ],
      "id": "10f6152d-ef08-4e46-8918-f5bdda88c0f2",
      "name": "Redis3",
      "executeOnce": true,
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "701b4e56-bead-4f6e-8811-c2ba1ba41152",
              "name": "Nome",
              "value": "={{ $json.body.senderName }}",
              "type": "string"
            },
            {
              "id": "f6e77a5a-e114-4144-ba1e-aae22aa2cc44",
              "name": "Telefone",
              "value": "={{ $json.body.phone }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1780,
        -540
      ],
      "id": "41c44216-c23f-45cf-97bc-a245d916bfcb",
      "name": "Lead"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8157da41-080f-4f0c-98cd-b1dbcacca0b4",
              "name": "Mensagem",
              "value": "={{ $('Webhook').item.json.body.text.message }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1920,
        -540
      ],
      "id": "c267a626-7598-4b57-8ef7-8b5ae88d4858",
      "name": "Mensagem Lead"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "gAJtfonhRkafnpB6",
          "mode": "list",
          "cachedResultName": "My project — Gerenciador Produtos"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        2280,
        -20
      ],
      "id": "bae5129a-8cc2-4f9b-9bb4-0b281e4bfd2b",
      "name": "Execute Workflow"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ca0ede51-ecde-4e1f-879a-946a2fda65eb",
                    "leftValue": "={{ $json.body.isGroup }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "false",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.isGroup }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    },
                    "id": "c0eba5d2-a7df-4916-bec0-ed0ced47910a"
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1440,
        -540
      ],
      "id": "ab0b0c78-6861-449a-842b-8a10a47ef375",
      "name": "Grp ou Msg"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.data.message.senderKeyDistributionMessage.groupId }}",
                    "rightValue": "120363420981315626@g.us",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "7fea6677-bfe5-47f4-8724-8f8b3edb3d98"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e511c57c-9c85-41de-a011-02ae6b9f7345",
                    "leftValue": "={{ $json.body.data.message.senderKeyDistributionMessage.groupId }}",
                    "rightValue": "120363420981315626-group",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8563a4ba-fbc9-4288-a3f9-566f8fb134cb",
                    "leftValue": "",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "none",
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1840,
        140
      ],
      "id": "096bca9f-49c7-48c0-8ecf-24da4847b5e1",
      "name": "Que Grp?",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "19592785-3f85-493a-bfcd-b124873afc6f",
              "leftValue": "={{ $json.body.phone }}",
              "rightValue": "5512982113000",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "2893267a-2090-433b-b5a4-2ab3999e376e",
              "leftValue": "={{ $json.body.phone }}",
              "rightValue": "551239313000",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "892182a8-3d5f-4aa1-96fa-9dd34e68b674",
              "leftValue": "={{ $json.body.phone }}",
              "rightValue": "5512991853000",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "6d170522-e390-477f-9423-0f1174c559e5",
              "leftValue": "={{ $json.body.phone }}",
              "rightValue": "5512982813000",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1640,
        -540
      ],
      "id": "91359ad2-206b-47ae-b29a-a7a64821f855",
      "name": "Filtro Davi"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json.body.msgContent.audioMessage.url }}",
                    "rightValue": "mmg",
                    "operator": {
                      "type": "string",
                      "operation": "notContains"
                    },
                    "id": "03a62020-cbc0-4d01-8c83-cb71bda3ad0f"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cbad2218-264c-4a8c-ac39-7d6bfe8653d9",
                    "leftValue": "={{ $('Webhook').item.json.body.msgContent.audioMessage.url }}",
                    "rightValue": "mmg",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        5580,
        -520
      ],
      "id": "cace15ba-5879-429d-96af-721280ff09d1",
      "name": "TXT or AUD",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {
          "responseFormat": "text"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        9640,
        -700
      ],
      "id": "dc997c78-25f0-4dd4-88f7-b770f17e8e7a",
      "name": "LLM",
      "credentials": {
        "openAiApi": {
          "id": "bcjn0rZ3TjEvRciY",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        10220,
        -540
      ],
      "id": "2f3e7a26-940d-441c-b93b-935750241402",
      "name": "Parse AI",
      "credentials": {
        "openAiApi": {
          "id": "bcjn0rZ3TjEvRciY",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=v2_{{ $('Lead').item.json.Telefone }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        11140,
        -640
      ],
      "id": "8f6fc419-7da9-4df6-a68f-5de4cf86c416",
      "name": "MEM 2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        11020,
        -640
      ],
      "id": "1c0bf415-33a5-483b-8ba3-fb60909ccd64",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "bcjn0rZ3TjEvRciY",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('AI Agent').item.json.output }}",
        "options": {
          "systemMessage": "=Você é um analista de texto com o único objetivo de analisar se deve ou não desativar a conversa através da tool (Status) caso perceba que a conversa foi redirecionada para o técnico ou um atendente humano, caso a conversa esteja percorrendo um clima muito negativo, ou caso o prompt peça para o cliente aguardar ou esperar.\n\nVocê só ira encerrar a conversa caso:\n-Veja no seu prompt que o atendende escreveu algo como \"Estarei encaminhando para o técnico\", \"Vou passar para o técnico\", ou semelhantes.\n-Perceba no prompt um tom de desculpas ou erros cometidos.\n-Não tenha uma pergunta a ser respondida\n\n#Não encerre a conversa caso não perceba nenhum destes sinais.\n\n#Nunca encerre a conversa caso o agente esteja aguardando alguma resposta.\n\n#Seu output será apenas \"Ativo\" ou \"Desativado\"\n#Sempre envie o seu output para a tool (Status)"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        11060,
        -900
      ],
      "id": "a22edc71-a4ed-4ba3-a2e6-62a8a008317a",
      "name": "Avaliador"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c5b15db5-2a3b-4876-82af-efd2616c0de5",
                    "leftValue": "={{ $('Mensagem Lead').item.json.Mensagem }}",
                    "rightValue": "falacomigobb",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status1 }}",
                    "rightValue": "Desativado",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "591c2c7d-cf9b-4fd9-8b4c-27b5588cd0ea"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a7224b73-6752-4f94-8d39-61dca14c24dc",
                    "leftValue": "={{ $json.status1 }}",
                    "rightValue": "Ativo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c5ef8092-516f-4cd0-8f4d-034499780e49",
                    "leftValue": "={{ $json.status1 }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "allMatchingOutputs": false
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        4540,
        -540
      ],
      "id": "9cff01bf-3fd5-4a24-8a2c-bfaada18cae5",
      "name": "Switch"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "atl",
        "key": "={{ $('Lead').item.json.Telefone }}_check",
        "keyType": "string",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        5100,
        -720
      ],
      "id": "73bcb49b-b102-4192-880f-07a3cf718f09",
      "name": "Redis5",
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('Lead').item.json.Telefone }}_check",
        "value": "Ativo",
        "keyType": "string"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4840,
        -720
      ],
      "id": "c9848f36-a43b-4c9c-ad80-da1de2e2adc7",
      "name": "status",
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "status1",
        "key": "={{ $('Lead').item.json.Telefone }}_check",
        "keyType": "string",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4380,
        -520
      ],
      "id": "d2097cb0-1874-4783-a62c-d53ebef8424e",
      "name": "GetStat",
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('Lead').item.json.Telefone }}_check",
        "value": "={{ $json.output }}",
        "keyType": "string",
        "expire": true,
        "ttl": 3600
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        11400,
        -900
      ],
      "id": "012e69d3-9d7b-4af5-b384-41be8a69b1e0",
      "name": "Redis6",
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        7100,
        -560
      ],
      "id": "0b676fb7-1677-4d12-a589-e149afac361a",
      "name": "Wait2",
      "webhookId": "57eac84a-ce2d-4739-a3fc-f76dc268657e",
      "executeOnce": true
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "Funcionamento",
        "returnAll": true
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        9980,
        -700
      ],
      "id": "998903a2-f8bc-43fe-8ce4-9bfee8700e12",
      "name": "Funcionamento",
      "credentials": {
        "supabaseApi": {
          "id": "rOYD11WtKRJQ9Bli",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "zsD7q5SeGKDY3bpp",
          "mode": "list",
          "cachedResultName": "Horario"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        2280,
        140
      ],
      "id": "553b60f8-b268-419f-ae09-77f381c4cd7d",
      "name": "Execute Workflow1"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Lead').item.json.Telefone }}_buffer"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        7760,
        -880
      ],
      "id": "fa7f7b51-d8b7-47a3-ad10-35839be19b5f",
      "name": "Deleta Buffer",
      "executeOnce": true,
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "mensagens",
        "key": "={{ $('Lead').item.json.Telefone }}_buffer",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        6940,
        -560
      ],
      "id": "7d43a779-7f4e-4f3b-953c-0b093d2bdc87",
      "name": "Get Buffer 1",
      "executeOnce": true,
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "mensagens",
        "key": "={{ $('Lead').item.json.Telefone }}_buffer",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        7280,
        -560
      ],
      "id": "8d935866-a509-4fe2-89d6-7432fb83edc6",
      "name": "Get Buffer 2",
      "executeOnce": true,
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {},
      "id": "159bc808-94b0-4839-b680-549961b3a740",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4100,
        -520
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "Usuarios",
        "filters": {
          "conditions": [
            {
              "keyName": "numero",
              "keyValue": "={{ $('Lead').item.json.Telefone }}"
            }
          ]
        }
      },
      "id": "25a90264-d72b-4b03-938d-cd557b832aba",
      "name": "Encontrar Cliente",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        3640,
        -520
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "rOYD11WtKRJQ9Bli",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "Usuarios",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "usuarios",
              "fieldValue": "={{ $('Lead').item.json.Nome }}"
            },
            {
              "fieldId": "numero",
              "fieldValue": "={{ $('Lead').item.json.Telefone }}"
            }
          ]
        }
      },
      "id": "0316cc9a-50d9-4ee3-bd93-f12f90fc577c",
      "name": "Criar Cliente",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        3940,
        -480
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "rOYD11WtKRJQ9Bli",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.numero }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    },
                    "id": "6d29bce9-997b-40cc-9e10-7658e6b6957c"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a9fedeb7-8e71-4610-a47b-269a4daabd6f",
                    "leftValue": "={{ $json.numero }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3780,
        -520
      ],
      "id": "77323cd6-965d-4b31-ab21-87c0c65f1b3e",
      "name": "Switch1",
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        4960,
        -340
      ],
      "id": "7ee78ba3-01a4-4cae-87b0-683f525364fb",
      "name": "Merge1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "639cb065-4e74-47bc-bd4d-ed007ee25eff",
              "leftValue": "={{ $json.body.data.key.participant }}",
              "rightValue": "5512982113000@s.whatsapp.net",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        2080,
        -20
      ],
      "id": "e07f8933-ce13-44ec-8bfa-33ae28931287",
      "name": "Ger. Produtos"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5fe25fe7-25b2-4650-aa3d-ef33f24dd0af",
              "leftValue": "={{ $json.body.phone }}{{ $json.body.participantPhone }}",
              "rightValue": "120363420981315626-group5512982113000",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "0532fcca-a591-4500-88f6-5d12061c0395",
              "leftValue": "={{ $json.body.text.message}}",
              "rightValue": "Cleiton,",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        2080,
        140
      ],
      "id": "b5493258-3a50-4755-a48d-2af2abf46136",
      "name": "Horário"
    },
    {
      "parameters": {
        "jsCode": "const nomeCompleto = $('Lead').first().json.Nome || '';\nconst primeiroNome = nomeCompleto.trim().split(' ')[0] || '';\n\nreturn {\n  json: {\n    primeiroNome,\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3500,
        -520
      ],
      "id": "417a1cf5-3055-4a7c-b8ae-2b8a1be01285",
      "name": "1o Nome"
    },
    {
      "parameters": {
        "outputFieldName": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        8040,
        -880
      ],
      "id": "8f0d4163-9f1c-4899-a169-6c1e72cef9aa",
      "name": "Data"
    },
    {
      "parameters": {
        "jsCode": "const meses = [\n  'janeiro', 'fevereiro', 'março', 'abril', 'maio', 'junho',\n  'julho', 'agosto', 'setembro', 'outubro', 'novembro', 'dezembro'\n];\n\nreturn items.map(item => {\n  const data = new Date(item.json.data);\n\n  // Ajuste de fuso se necessário:\n  // data.setHours(data.getHours() - 4);\n\n  const mesExtenso = meses[data.getMonth()];\n  const mesCapitalizado = mesExtenso.charAt(0).toUpperCase() + mesExtenso.slice(1);\n\n  item.json.mes_extenso = mesCapitalizado;\n  return item;\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8180,
        -880
      ],
      "id": "7c87ae50-dc65-434c-83b4-b6b0172dd520",
      "name": "Mes1"
    },
    {
      "parameters": {
        "jsCode": "// Obtém a data original em string e converte para objeto Date\nconst inputDateStr = $('Data').first().json.data;\nconst inputDate = new Date(inputDateStr);\n\n// Subtrai 1 hora manualmente (ajuste de -04:00 para -03:00)\ninputDate.setHours(inputDate.getHours() - 7);\n\n// Formata a data no padrão brasileiro\nconst dia = String(inputDate.getDate()).padStart(2, '0');\nconst mes = String(inputDate.getMonth() + 1).padStart(2, '0');\nconst ano = inputDate.getFullYear();\nconst hora = String(inputDate.getHours()).padStart(2, '0');\nconst minuto = String(inputDate.getMinutes()).padStart(2, '0');\n\nconst dataFormatada = `${dia}/${mes}/${ano} ${hora}:${minuto}`;\n\n// Retorna resultado\nreturn [\n  {\n    json: {\n      dataFormatada\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8320,
        -880
      ],
      "id": "21fac163-a6bd-4547-943f-b53b21eeee2c",
      "name": "Code1"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const dataString = item.json.dataFormatada; // Ex: \"15/07/2025 15:01\"\n\n  // Converte string BR para ISO (yyyy-mm-ddTHH:MM:00)\n  const partes = dataString.split(/[\\s/:]/); // [dia, mês, ano, hora, minuto]\n  const dataISO = `${partes[2]}-${partes[1]}-${partes[0]}T${partes[3]}:${partes[4]}:00`;\n\n  const data = new Date(dataISO);\n  const horaAtual = data.getHours();\n\n  let saudacao;\n\n  if (horaAtual >= 6 && horaAtual < 12) {\n    saudacao = \"Bom dia\";\n  } else if (horaAtual >= 12 && horaAtual < 18) {\n    saudacao = \"Boa tarde\";\n  } else {\n    saudacao = \"Boa noite\";\n  }\n\n  item.json.saudacao = saudacao;\n  return item;\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8460,
        -880
      ],
      "id": "ff144f54-0f37-4f4a-8868-3d9ab07c7cb2",
      "name": "Sauda2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "562f4574-659b-4b90-b885-d6acdb3e2e13",
              "name": "mensagens",
              "value": "={{ $('Get Buffer 2').item.json.mensagens.join(\"\\n\") }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        7900,
        -880
      ],
      "id": "615d129a-990f-492d-bf43-da5f6cc7a4ac",
      "name": "Join",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Mensagem Lead').item.json.Mensagem }}",
        "options": {
          "systemMessage": "=Você é uma IA com foco em saudar o cliente segundo o horário.\n\nNome={{ $('1o Nome').item.json.primeiroNome }}\n\n##Diretriz primária: SOMENTE SAUDAR O CLIENTE CASO ELE SAUDE OU SEJA A PRIMEIRA INTERAÇÃO SALVA\n\n#DIRETRIZ PRINCIPAL: SAUDAR SEMPRE DE ACORDO COM O HORÁRIO, IGNORAR COMPLETAMENTE O INPUT DO USUÁRIO\n\ncurrent_time = {{ $json.dataFormatada }}\n\nSAUDAÇÃO INICIAL\n\nVerificar horário com a tool current_time e ajustar saudação:\n\n1. Ótimo dia, [nome]! = (antes de 12h)\n\n2. Ótima tarde, [nome]! = (entre 12h e 18h)\n\n3. Ótima noite, [nome]! = (após 18h)\n\nSua reposta conterá APENAS a saudação, de 1 a 3, EX:\n\n-Human: \"Oi\"\n\nHorário: 12:32\n*AI viu que o horário bate com o da saudação 2.*\n\n-AI: \"Ótima tarde, Davi!\""
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        8820,
        -880
      ],
      "id": "ac4c38d8-3d33-4524-9b11-d9c20a0b2c7d",
      "name": "AI Agent2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        8820,
        -680
      ],
      "id": "eeb32a4c-ec59-4986-93b2-c62146cda8ad",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "bcjn0rZ3TjEvRciY",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "91f02795-5796-4845-94ea-289b469f4ae7",
              "leftValue": "={{ $json.output }}",
              "rightValue": "=Ótima tarde, {{ $('1o Nome').item.json.primeiroNome }}!",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "5b632051-9439-46d8-89a7-80d70e07dd94",
              "leftValue": "={{ $json.output }}",
              "rightValue": "=Ótimo dia, {{ $('1o Nome').item.json.primeiroNome }}!",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "708a3dd9-fb0f-49a8-8b37-f136aef51f22",
              "leftValue": "={{ $json.output }}",
              "rightValue": "=Ótima noite, {{ $('1o Nome').item.json.primeiroNome }}!",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        9140,
        -880
      ],
      "id": "8df270bc-9fc3-4f76-87f7-06c6ec1b3c02",
      "name": "If1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "58864ebc-824c-47cf-a5eb-49fd54193c14",
              "name": "output",
              "value": "null",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        9320,
        -820
      ],
      "id": "d75595f9-55e9-4da5-8ea2-70537d877e54",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "01d20e0a-253c-47df-9d6c-24ac2180f922",
              "leftValue": "={{ $('Get Buffer 3').item.json.mensagens.last() }}",
              "rightValue": "={{ $('Get Buffer ').item.json.mensagens.last() }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "c854517f-8a28-4bb6-ac33-eb8b07777a22",
              "leftValue": "={{ $json.Locked }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1720,
        -1940
      ],
      "id": "b45e93a6-45d0-46da-b20f-18100e6f7af9",
      "name": "If Redis OK1"
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1480,
        -2380
      ],
      "id": "daafb6f0-f364-41dc-9e98-35e705f87522",
      "name": "Wait3",
      "webhookId": "57eac84a-ce2d-4739-a3fc-f76dc268657e",
      "executeOnce": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3e6829d4-a8a5-4253-a4c8-57f24dc80a25",
              "leftValue": "={{ $('Webhook').item.json.body.forwarded }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1440,
        -1940
      ],
      "id": "0c8246fb-50e8-4364-b70c-4cd8e522e440",
      "name": "Não encaminhada1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "575c2511-e5c8-43f8-acd9-e5448d43bcda",
              "leftValue": "={{ $('Webhook').item.json.body.forwarded }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1440,
        -2120
      ],
      "id": "659ecdf5-ad35-4027-8c72-6afdbc3bfd71",
      "name": "Encaminhada1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1900,
        -1920
      ],
      "id": "a59209ec-6c3b-45b1-b949-ffa1fe9d36df",
      "name": "Loop1"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('Lead').item.json.Telefone }}_lock",
        "value": "true",
        "expire": true,
        "ttl": 40
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1860,
        -2140
      ],
      "id": "a657ef87-4461-4daa-aa82-486b86178632",
      "name": "Lock process1",
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "21000688-f298-408a-bada-726bbfa2e218",
              "leftValue": "={{ $json.mensagens[0] }}",
              "rightValue": "[null]",
              "operator": {
                "type": "boolean",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1260,
        -2020
      ],
      "id": "639efd13-a85c-4016-bd22-6d248d6c7fbf",
      "name": "If2"
    },
    {
      "parameters": {
        "content": "## Buffer avançado com filtragem simultânea múltipla (Forwarding)",
        "height": 800,
        "width": 1100,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1060,
        -2480
      ],
      "id": "e4333091-fc10-4bac-81a8-0a80b0ad88c2",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Lead').item.json.Telefone }}_buffer"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2000,
        -2140
      ],
      "id": "b276542f-7725-4e64-84a8-8b52c7eff045",
      "name": "Deleta Buffer1",
      "executeOnce": true,
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "Locked",
        "key": "={{ $('Lead').item.json.Telefone }}_lock",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1580,
        -2120
      ],
      "id": "800c5e3d-bb66-4151-825d-af697a9edf68",
      "name": "Check Lock1",
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "mensagens",
        "key": "={{ $('Lead').item.json.Telefone }}_buffer",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1200,
        -2380
      ],
      "id": "2c6cf88a-a131-44bc-9798-f860c3c84e52",
      "name": "Get Buffer ",
      "executeOnce": true,
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "mensagens",
        "key": "={{ $('Lead').item.json.Telefone }}_buffer",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1780,
        -2380
      ],
      "id": "6b12052e-2cfd-4982-a945-87d11142db8b",
      "name": "Get Buffer 3",
      "executeOnce": true,
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "Locked",
        "key": "={{ $('Lead').item.json.Telefone }}_lock",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1580,
        -1940
      ],
      "id": "27092b5a-e09d-4a09-a57e-06015c64854a",
      "name": "Check Lock Too1",
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=5512982113000_check",
        "value": "=Ativo",
        "keyType": "string",
        "expire": true,
        "ttl": 3600
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        9780,
        -40
      ],
      "id": "14daf23e-c787-4eb4-a1b1-2ed6b831b0cb",
      "name": "Redis7",
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('Lead').item.json.Telefone }}_msg",
        "value": "={{ $('Webhook').item.json.body.messageId }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3000,
        -380
      ],
      "id": "55f9b100-9075-4353-a1da-cd2e2ab7f2ec",
      "name": "Redis1",
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "mensagens",
        "key": "={{ $('Lead').item.json.Telefone }}_msg",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2460,
        -480
      ],
      "id": "d9d00adb-5fa6-474a-ae56-a10b46e95fd7",
      "name": "Get Buffer1",
      "executeOnce": true,
      "retryOnFail": false,
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f45894f6-038e-4e41-95fa-4d302d638794",
              "leftValue": "={{ $json.mensagens }}",
              "rightValue": "null",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2780,
        -480
      ],
      "id": "cf64a1b8-f30b-4d4b-be70-2ef05b169e86",
      "name": "If3"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Lead').item.json.Telefone }}_DB",
        "sessionTTL": 86400
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.5,
      "position": [
        9780,
        -700
      ],
      "id": "4278012e-c947-404a-895e-9093b5acca02",
      "name": "Redis Chat Memory",
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "19626244-f0e4-4f6c-82bd-53810b6ab6d1",
              "leftValue": "={{ $json.mensagens.last() }}",
              "rightValue": "={{ $('Get Buffer 1').item.json.mensagens.last() }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7440,
        -560
      ],
      "id": "e96bdd2d-6057-4aa1-9024-0111df4a5d76",
      "name": "If4"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "mensagens",
        "key": "={{ $('Lead').item.json.Telefone }}_buffer",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        8740,
        -360
      ],
      "id": "3906cdb4-de83-4508-aa98-c9e04c913cf8",
      "name": "Get Buffer 4",
      "executeOnce": true,
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2dcea664-7257-45bf-be54-1168bdc13ff3",
              "leftValue": "={{ $json.mensagens }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        8900,
        -360
      ],
      "id": "ee93b05e-36dd-4420-90ed-009e11a46960",
      "name": "If5"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        9100,
        -180
      ],
      "id": "02bf6ffe-24a4-464b-8689-79616e0be823",
      "name": "Organização3"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Lead').item.json.Telefone }}_msg"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4960,
        -540
      ],
      "id": "04e931be-f9cf-4acd-9678-28cf0299fc06",
      "name": "Delete Msg ID Buffer 1",
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Lead').item.json.Telefone }}_msg"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        8580,
        -360
      ],
      "id": "291b2b61-e782-4ddb-a158-6b760b895ae0",
      "name": "Delete MSG ID Buffer",
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E29DB01364090EFDC8006E9A5181015/token/771E4BE1F789AB112E4831D6/send-text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"phone\": \"{{ $('Lead').item.json.Telefone }}\",\n    \"message\": \"*#Max - Atendimento*\\n{{ $('Split Out').item.json['output.mensagens'] }}\",\n    \"delayMessage\":3\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8100,
        -260
      ],
      "id": "01913df5-4393-4e6f-9243-affe6154b9f1",
      "name": "Z-API",
      "credentials": {
        "httpHeaderAuth": {
          "id": "4KOge2CHa6sSv6MD",
          "name": "Header Auth account"
        },
        "httpBearerAuth": {
          "id": "VYf1v9ZyxXUkh9tH",
          "name": "Bearer Auth account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Lead').item.json.Telefone }}_DB.tmp",
        "messageData": "={{[$json.dbtemp[0], $json.dbtemp[1]]}}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        8420,
        -360
      ],
      "id": "fd9678bd-7d49-4d38-bf79-0121966f980c",
      "name": "Redis2",
      "retryOnFail": false,
      "maxTries": 2,
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "dbtemp",
        "key": "={{ $('Lead').item.json.Telefone }}_DB",
        "keyType": "list",
        "options": {
          "dotNotation": true
        }
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        8280,
        -360
      ],
      "id": "f65419a3-79fe-4c4d-b599-2886fe33cf1b",
      "name": "Redis4",
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('Lead').item.json.Telefone }}_DB.tmp",
        "value": "={{ [ $json.dbtemp[0], $json.dbtemp[1] ] }}",
        "keyType": "sets",
        "expire": true,
        "ttl": 18000
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        10640,
        -20
      ],
      "id": "8bf2b6a5-8c6c-405c-8b52-fde8a5af7621",
      "name": "Redis9",
      "retryOnFail": false,
      "maxTries": 2,
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ [$json.Input[0], $json.Input[1]] }}",
        "options": {
          "systemMessage": "=Você é um agente com foco em categorização e resumo de conversas de uma assistência técnica com o cliente.\n\n  Seu objetivo é resumir a necessidade do cliente em menos de 100 caracteres e também categorizar essa conversa em 5 categorias: Televisão e afins; Computador e afins; Notebook e afins; Monitor e afins; Microondas e afins.\n\nApós a categorização da mensagem você deve definir para qual técnico o contato será passado:\n\n  Televisão e afins = Claudinei \n  Computador e afins = César\n  Notebook e afins = César\n  Monitor e afins = César\n  Microondas e afins = Claudinei\n\nApós todas as etapas concluídas preencha seu output da seguinte forma:\n\n\n \"⚠️[Nome do técnico], atendimento automático encerrado.\n\n👤 Cliente: *{{ $('Webhook').item.json.body.senderName }}* \n📱 Número: *{{ $('Webhook').item.json.body.phone }}* \n\n📬 Relatório: _[Resumo da necessidade do cliente]_\""
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        12380,
        -900
      ],
      "id": "b8f75c2e-f962-494f-85e9-58eecd2ff29a",
      "name": "AI Agent3"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        12380,
        -700
      ],
      "id": "29e5c4af-a2f7-418a-ac5d-beb4a7686257",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "bcjn0rZ3TjEvRciY",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "Input",
        "key": "={{ $('Lead').item.json.Telefone }}_DB.tmp",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        12160,
        -960
      ],
      "id": "247950d6-0184-467b-a52d-59a606bd8cc5",
      "name": "Redis10",
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Lead').item.json.Telefone }}_DB.tmp"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        12700,
        -900
      ],
      "id": "2e7ea26a-cb43-41fb-975f-bc436f4b4a93",
      "name": "Del DB Tmp",
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "César",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "d8315e5f-bb49-4541-a4e3-fe8bd44ae002"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c0520a07-59c0-44c4-b9c8-cca04d14afad",
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "Claudinei",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f3e239d8-bf72-4502-8f0d-8a5bfb0ad890",
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "Davi",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        12900,
        -900
      ],
      "id": "e568e3bb-9796-4164-84c9-f3cf1fcab0b6",
      "name": "Switch2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E29DB01364090EFDC8006E9A5181015/token/771E4BE1F789AB112E4831D6/send-text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "5512982113000"
            },
            {
              "name": "message",
              "value": "={{$json.output}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        13220,
        -1060
      ],
      "id": "9ff02bfd-16f0-4145-9c52-f23c4486e4ce",
      "name": "Relat. Cesar",
      "credentials": {
        "httpHeaderAuth": {
          "id": "4KOge2CHa6sSv6MD",
          "name": "Header Auth account"
        },
        "httpBearerAuth": {
          "id": "VYf1v9ZyxXUkh9tH",
          "name": "Bearer Auth account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E29DB01364090EFDC8006E9A5181015/token/771E4BE1F789AB112E4831D6/send-text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "5512982113000"
            },
            {
              "name": "message",
              "value": "={{$json.output}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        13220,
        -900
      ],
      "id": "18dd1dcc-035f-41b1-a67b-9829d2d8b7bd",
      "name": "Relat. Nei",
      "credentials": {
        "httpHeaderAuth": {
          "id": "4KOge2CHa6sSv6MD",
          "name": "Header Auth account"
        },
        "httpBearerAuth": {
          "id": "VYf1v9ZyxXUkh9tH",
          "name": "Bearer Auth account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E29DB01364090EFDC8006E9A5181015/token/771E4BE1F789AB112E4831D6/send-text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "5512982113000"
            },
            {
              "name": "message",
              "value": "={{$json.output}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        13220,
        -740
      ],
      "id": "e6046af5-6261-4623-aa0c-c4a2fb38eb47",
      "name": "Relat. Davi",
      "credentials": {
        "httpHeaderAuth": {
          "id": "4KOge2CHa6sSv6MD",
          "name": "Header Auth account"
        },
        "httpBearerAuth": {
          "id": "VYf1v9ZyxXUkh9tH",
          "name": "Bearer Auth account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "af294180-9d51-4891-ac06-abe8c8dc5893",
              "leftValue": "={{ $json.status1 }}",
              "rightValue": "Desativado",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        11940,
        -900
      ],
      "id": "ee17207e-8743-4607-a74f-ce2815de05f3",
      "name": "If7"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "status1",
        "key": "={{ $('Lead').item.json.Telefone }}_check",
        "keyType": "string",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        11780,
        -900
      ],
      "id": "51a1910a-20b1-4cfa-9bfe-a2b716f51c24",
      "name": "GetStat1",
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Avalia e trava agente IA",
        "height": 480,
        "width": 640
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        10960,
        -980
      ],
      "id": "50ede208-1215-4415-a638-58fbb9c9b691",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Envia Relatório da Lead Pronta para o técnico",
        "height": 580,
        "width": 1780,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        11700,
        -1100
      ],
      "id": "f37f952b-0126-40a0-9485-2e7e30e3ffe6",
      "name": "Sticky Note1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        10700,
        -580
      ],
      "id": "57da3f70-1d58-4537-b785-36213d760a83",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "content": "## Define Saudações e Horários",
        "height": 360,
        "width": 900
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        7720,
        -1000
      ],
      "id": "f33144e6-03cc-4d73-8405-f2afe196fc59",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Agente Para Saudação",
        "height": 440,
        "width": 820
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        8700,
        -1000
      ],
      "id": "2edd3de2-ccad-4fbb-8fba-228913f04461",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Agente Conversacional e Parser",
        "height": 580,
        "width": 1260,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        9600,
        -1000
      ],
      "id": "8f3b58ae-22c4-4348-a10c-033eb4fac4ed",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## Envia Mensagens e loop Buffer",
        "height": 520,
        "width": 1540,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        7720,
        -520
      ],
      "id": "7ad6500f-7e80-4fd0-869b-ee5a2e9ccfd1",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "## Buffer\n",
        "height": 340,
        "width": 780,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        6860,
        -640
      ],
      "id": "63c67260-c6f8-4b33-a658-c61a1c3f5b96",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## Filtragem Comandos e Travas",
        "height": 620,
        "width": 1120,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4340,
        -760
      ],
      "id": "c3710d0b-78d8-4728-8295-351e2b687744",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "## Inicia Buffer + Filtro TXT or Audio",
        "height": 440,
        "width": 1220,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5520,
        -680
      ],
      "id": "3380dc66-464f-484e-b41d-e090c03bd7a1",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "## FromMe e Set MessageID\nPra que MsgID? Para impedir que diversos processos respondam a mesma conversa simultâneamente, o primeiro processo a pegar a mensagem pode responder.",
        "height": 560,
        "width": 1220,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2160,
        -760
      ],
      "id": "88681e26-680d-453c-b49d-340dfe42e0b3",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ce44d552-db37-4741-b37a-9f8fc25c8990",
              "leftValue": "={{ $('Webhook').item.json.body.fromMe }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2240,
        -540
      ],
      "id": "638cfc1e-ea1f-4b7f-8cea-3bafcf20f2bd",
      "name": "IF FromMe"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8c7f3257-668c-42f8-be0f-af2809c8905b",
              "leftValue": "={{ $('Mensagem Lead').item.json.Mensagem }}",
              "rightValue": "Max",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2460,
        -640
      ],
      "id": "e71bd3c7-4f85-460f-a33f-941cddc7f63e",
      "name": "IF Not From Max"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('Lead').item.json.Telefone }}_check",
        "value": "=Desativado",
        "keyType": "string",
        "expire": true,
        "ttl": 3600
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2760,
        -660
      ],
      "id": "a12b7796-2ce3-4fe4-bbf5-daf850775012",
      "name": "Block Agente",
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Criar Cadastro",
        "height": 340,
        "width": 800
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3460,
        -620
      ],
      "id": "92286572-2809-44ec-899e-c23b6f516bc7",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "msgID",
        "key": "={{ $('Lead').item.json.Telefone }}_msg",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        6380,
        -540
      ],
      "id": "34448278-4f6c-429f-a3eb-b24be7cd50e6",
      "name": "Get MsgID",
      "executeOnce": true,
      "credentials": {
        "redis": {
          "id": "NRjQ80xpNAewkw5b",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a0ba33dd-8d0b-4673-bf52-ba7954e29370",
              "leftValue": "={{ $json.mensagens }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "f6b79ed2-cb77-402a-b3a4-f8d5b179f4ba",
              "leftValue": "={{ $json.mensagens }}",
              "rightValue": "={{ $('Webhook').item.json.body.messageId }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6600,
        -540
      ],
      "id": "2743a29d-09be-40ff-b7ce-4c6e7911448b",
      "name": "If MsgID OK"
    },
    {
      "parameters": {
        "content": "## WebHook + Definição de Dados",
        "height": 300,
        "width": 1060,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1020,
        -640
      ],
      "id": "86d19fdd-8bd1-4bd3-8648-8bbc915a25f1",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "## Starter para grupos internos",
        "height": 440,
        "width": 720,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1800,
        -100
      ],
      "id": "68756afb-faa2-4346-ab1a-38f7843cb505",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d2a959c6-58a2-495d-a2a0-ad7202d81939",
              "leftValue": "={{ $json.body.waitingMessage }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1240,
        -540
      ],
      "id": "0fc603f7-d428-465b-9f0f-b520f7452ad1",
      "name": "If9"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-07-28T23:48:16.000Z",
  "versionId": "96ef9f81-9db5-48cd-b2de-4e9c3ddc6d8e"
}